[{"id": 26, "name": "Artificial Intelligence", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "Artificial intelligence is a young science studying not only how we think but also how we build robots, cars, spaceships intelligent. This course will enable you to grasp the basic theory and techniques in designing and building intelligence. The content of the course consists of knowledge representation, logical reasoning, search and planning, as well as decision making under uncertainty. The course is well suited for Robotics program but also suitable for many other study profiles."},{"id": 41, "name": "Advanced Component-Based Software Engineering", "ects": "7.5", "semester": "Spring 18, Period 1", "description": null},{"id": 91, "name": "Computer Networks I, distance course", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "In the rapid development of both computers and networks, there is an increasing need for people with knowledge in these areas. This course will provide a basic theoretical and practical knowledge in the art of configuring and securing computer networks and create simpler topologies. It will prepare you for Cisco Certified Entry Networking Technician (CCENT) certificate and if you also read Computer Networks II, distance course you will be prepared for Cisco Certified Network Associate (CCNA) certificate."},{"id": 92, "name": "Computer Networks I, distance course", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "In the rapid development of both computers and networks, there is an increasing need for people with knowledge in these areas. This course will provide a basic theoretical and practical knowledge in the art of configuring and securing computer networks and create simpler topologies. It will prepare you for Cisco Certified Entry Networking Technician (CCENT) certificate and if you also read Computer Networks II, distance course you will be prepared for Cisco Certified Network Associate (CCNA) certificate."},{"id": 93, "name": "Computer Networks II, distance course", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "In the rapid development of both computers and networks, there is an increasing need for people with knowledge in these areas. This course will provide a detailed theoretical and practical knowledge in the art of configuring and securing computer networks and create network topologies. It will, together with Computer Networks I, distance course prepare you for Cisco Certified Network Associate (CCNA) certificate."},{"id": 94, "name": "Computer Networks II, distance course", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "In the rapid development of both computers and networks, there is an increasing need for people with knowledge in these areas. This course will provide a detailed theoretical and practical knowledge in the art of configuring and securing computer networks and create network topologies. It will, together with Computer Networks I, distance course prepare you for Cisco Certified Network Associate (CCNA) certificate."},{"id": 98, "name": "Computer Architecture", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "A computer scientist/engineer or anyone who uses programming in their jobs must have a good understanding of the underlying hardware and its relation with the software running on it. Understanding the inner-workings of a modern microprocessor, its functions and connection between hardware and software is the key to develop programs that are optimized for performance, cost and energy/environment. The course focuses on high performance architecture and memory systems and also multiprocessors and parallel computing hardware. It serves both as an advanced course for more advanced study and as a broad overview of the field of computer architecture."},{"id": 99, "name": "Fundamentals of Computer Graphics", "ects": "7.5", "semester": "Spring 18, Period 2", "description": null},{"id": 107, "name": "Design of dependable and fault-tolerant embedded systems", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The purpose of the course is to provide participants with the fundamental principles of"},{"id": 123, "name": "Distributed Software Development", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The course is project-based, where students from three universities work together in a project in a distributed environment. Groups are made of 5-8 students working together. The project work includes requirements specification, design and implementation of a software system, and the presentation of the project status and final results. The course uses a videoconference system for joined lectures, seminars and presentations, and other means for distributed communication. The course represents a unique opportunity for students to experience and learn how to cooperate in a real geographically distributed environment."},{"id": 124, "name": "Distributed Systems", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": null},{"id": 250, "name": "Formal Languages, Automata and Theory of Computation", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "Formal Languages, Automata and Theory of Computation provides an insight into theoretical foundations of artificial languages, automata and theory of computation - topics that appear in various disguises in every branch of computer science."},{"id": 261, "name": "Research methods in computer science", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": null},{"id": 330, "name": "Embedded systems I", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": null},{"id": 331, "name": "Embedded systems II", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "This course extends the Embedded Systems I course, which focuses on state-of-the-practice (SOTP), with a deeper theoretical knowledge, i.e., state-of-the-art (SOTA) methodology, for developing embedded systems. It starts by introducing the problems and the limitations of SOTP used today in industrial systems, and presents available theory and tool support to address those problems. Some of the advanced methods covered in this course are developed and mostly used in the academic domain, but they are expected to be used in industrial systems in a near future. The course contents include, but it is not limited to, advanced theory for distributed real-time systems, formal methods for functional and temporal verification, such as schedulability analysis, hazard analysis, fault tolerance, as well as advanced tool support for development of complex embedded systems."},{"id": 339, "name": "Industrial Software Development", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The purpose of the course is that students will develop and expand their knowledge of processes, methods and techniques in computer science. The course will provide knowledge of how to plan, carry out and present an independent improvement work related to their own company\u2019s problem and project model in software engineering. This course is suitable for people working in the development of complex technical systems where software plays a key role and are interested in learning more on how to run change projects in their organization."},{"id": 342, "name": "Industrial Systems in Cloud Computing", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "Cloud Computing represents a paradigm shift in computing services. With its increased influence in information industry, it has become part of the mandatory skillsets for professionals."},{"id": 343, "name": "Industrial Robotics", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "The purpose of the course is to provide the required background to deeply understand the problems behind the design of an industrial robot. The course will provide analytical methods and guidelines to design and control most of the existing classes of industrial robots. Examples from the industrial field will be provided to make direct connection with the real applications on the market. After completed the course, the student will be able to model an industrial manipulator as a serial/parallel kinematic chain, analyze the workspace, develop the robot dynamical model, perform motion planning in the joint and operational space and simulate it in 3D environment."},{"id": 359, "name": "Intelligent Systems", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "There are several algorithms in Artificial intelligence that solves various types of problems. In this course we will discuss how they can be implemented in software and hardware. We will also address the problem of choosing right algorithm for a given problem and integrate it into a system in an efficient way."},{"id": 416, "name": "Compiler Theory", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": null},{"id": 421, "name": "Component Technologies", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The course gives an insight in the most commonly used software component technologies, such as Component Object Model, Enterprise JavaBeans, CORBA Component Model and .NET. You will train yourself to analyze, summarize, and exemplify relevant information about a given problem area. Teaching and evaluation methods include hands-on exercises, written reports with peer reviews, and a larger project. There is no written exam and participation in exercises, reports/reviews, and the project is mandatory."},{"id": 449, "name": "Quality assurance - Model based testing in practice", "ects": "2.5", "semester": "Autumn 18, Period 2", "description": "Model-based testing is a systematic method to automatically generate test cases from models of system requirements. It allows you to evaluate requirements, create a model and generate automatically test cases. After this course you should be able to have knowledge about writing requirements and use these to create models for software testing. You will develop practical skills and abilities on applying model-based testing in industrial practice. You will learn how to use different kinds of modeling techniques. You will be able to use this new knowledge to design requirement models and automate test cases during unit and integration testing. In addition, as a test practitioner you will learn how to design test cases using models at system level."},{"id": 450, "name": "Quality assurance - Regression testing and fault prediction", "ects": "2.5", "semester": "Autumn 18, Period 1", "description": "Changes to software under test are unavoidable. Such changes and their side effects must be well tested, without re-running all tests. Moreover, in general, testing cost is well known, therefore faults must be detected early by focusing testing efforts on fault-prone parts. The participants in the course will learn about regression test selection and software fault prediction techniques. Effective regression test selection techniques will reduce cost of implementing modifications to software under test. Software fault prediction part of the course is about focusing test efforts on more fault-prone parts of the software where maximum return on investing test resources can be achieved. Overall, this course is about using techniques that make software testing more efficient and effective."},{"id": 451, "name": "Quality assurance - Catching bugs by formal verification", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The aim of the course is to introduce the participants into methods and tools for verifying systems that need to react to external stimuli. The methods use system models with precise formal semantics and will span model-checking as well as deductive verification. A set of simple examples as well as real-world applications will be used throughout the course to illustrate the methods and their tool support. The objective of the course is to understand the underpinning theories of formal verification, and learn how to apply tool support in order to verify system models."},{"id": 465, "name": "Linux operating system and development environment, distance course", "ects": "7.5", "semester": "Spring 18, Period 1", "description": null},{"id": 479, "name": "Learning Systems", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "An important trend today is systems and functionality that can learn, improve and adapt to changing environments. In this course you will study important techniques that enable computer programs to improve automatically through experience. The course covers decision trees, artificial neural nets, evolutionary computation, fuzzy systems, probabilistic learning, and reinforcement learning. The course is well connected to Robotics, Computer Science, and Intelligent Embedded Systems programs."},{"id": 500, "name": "Machine Learning With Big Data", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "Today with the fast development of digital technologies and advance communications a gigantic amount of data sets with complex structures called \u2018Big data\u2019 is being produced everyday enormously and exponentially. The aim of the course is to give the students insights in fundamental concepts of machine learning with big data as well as recent research trends in the domain. The students will learn about problems and industrial challenges out of several case studies in the domain. Further, the students will learn to use tools to develop systems using machine-learning algorithms in big data."},{"id": 528, "name": "Software Development for Real-Time Systems", "ects": "7.5", "semester": "Spring 18, Period 2", "description": null},{"id": 530, "name": "Model-Driven Engineering", "ects": "7.5", "semester": "Spring 18, Period 2", "description": "The ever growing complexity of modern software systems requires appropriate methodologies to deal with their intricacies. However, the most widespread development approaches are basically the same as 20 years ago, that is the application implementation is written by hand as source code in some programming language. This course provides the students with a more advanced approach to software development: no focus on source code anymore, models are promoted as first-class artefacts and used to design the system, verify and validate its correctness, and automatically generate the implementation code. The participants will become familiar with the basic concepts behind modelling, the latest techniques to design custom modelling languages and to transform models both to other models to perform analyses and to source code to automatically generate the application implementation."},{"id": 531, "name": "Model-based development: Theory and practice (MBD-TP)", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The purpose of the course is to provide participants with the principles behind model-driven development of software systems and the  application of such a methodology in practice. Modelling is an effective solution to reduce problem complexity and, as a consequence, to enhance time-to-market and properties of the final product."},{"id": 560, "name": "Parallell Systems", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "With the emerging use of multi-core processors in today\u00b4s computers it is very important for software developers to understand and master different forms of parallelism. The course will cover different types of parallel programming languages, parallel algorithms, and parallel hardware, and how these concepts interact with each other. Special focus will be given on how to write parallel software which makes use of underlying parallel hardware in an efficient and scalable way."},{"id": 574, "name": "Applied cybersecurity", "ects": "5.0", "semester": "Autumn 18, Period 1", "description": "The web is emerging as a powerful application platform. While bringing unparalleled possibilities for collaboration unhampered by physical location or device choice, the distributed, always-online nature of a web application leaves it open for attack. Using the most common web application and web service vulnerabilities as the setting, this course teaches how to identify, analyze and protect against attacks. Many of the attacks discussed in the course are instances of universal attack classes, where other instances have similar attack vectors and protection mechanisms. "},{"id": 593, "name": "Programming Mobile Applications", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": null},{"id": 594, "name": "Programming of Reliable Embedded Systems", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": null},{"id": 595, "name": "Fundamentals of programming", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": null},{"id": 599, "name": "Software Engineering 1: Basic Course", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The aim of the course is to equip the students with theoretical knowledge needed to work as a software engineer, and explains development models and project management, requirements engineering, and what software quality means. The course also covers software architecture, design and implementation, and includes practical exercises in important graphical and textual notations, and report writing."},{"id": 600, "name": "Software Engineering 2: Project teamwork", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "In this course, students will work in project teams to go through a whole software engineering project, including meeting the customer, and planning and managing the project. You will select tools and programming languages based on the project requirements. You will architect and design the system, implement and finally verify it. To succeed, you will need to divide the work within the project group and be communicative. The course also gives practical experience in documenting all these activities."},{"id": 601, "name": "Software Engineering 3: Software Architecture and Processes", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "The course aims to extend and deepen your knowledge, understanding and skills within software engineering. This will prepare you for taking on more responsible roles in software development projects and for conducting Master thesis projects in software engineering. The main topics of the course are software architecture, software development methods, and software engineering research. Teaching and evaluation methods include laboratory assignments, seminars with oral presentations, and group exercises. There is no written exam and participation in assignments, seminars, and exercises is mandatory."},{"id": 602, "name": "Software Testing", "ects": "7.5", "semester": "Spring 18, Period 1", "description": "Testing is widely considered to be a heavyweight, but still under-prioritized activity in software and systems development. This course provides an understanding of the fundamental problems, as well as practical methods and tools for a systematic state-of-the-art approach to software testing."},{"id": 603, "name": "Project in advanced embedded systems", "ects": "30.0", "semester": "Autumn 18, Period 1", "description": null},{"id": 619, "name": "Project in embedded systems", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "This course has the objective to apply professional project methodology on a project relevant to the field, and hence provide a deeper knowledge of embedded systems development. The work includes specification and analysis of the problem, searching for similar and related works in practices and research, providing a solution on a modeling and implementation level, and presenting the obtained results both in speech and writing. The course in performed in a project form, with a smaller group of students per project. The larger part of the course is an independent group work, guided by a supervisor appointed to each group. All projects are guaranteed to be within the field of embedded systems, but the exact contents of the projects is subject to change for each year, and it will be presented to the students at the beginning of the course."},{"id": 620, "name": "Project in intelligent embedded systems", "ects": "15.0", "semester": "Spring 18, Period 2", "description": " "},{"id": 646, "name": "Real-Time Systems 1, distance course", "ects": "7.5", "semester": "Spring 18, Period 1", "description": null},{"id": 757, "name": "Security in computer networks, distance course", "ects": "7.5", "semester": "Spring 18, Period 1", "description": null},{"id": 759, "name": "Safety critical software", "ects": "6.0", "semester": "Autumn 18, Period 1", "description": "Software is nowadays used to realize advanced functionality in different types of systems."},{"id": 760, "name": "Safety Critical Systems Engineering", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "In this course a 'Safety Case' for an industry related application such as e.g., a break-by-wire system, will be built. A Safety Case is a requirement in many safety standards. It is a documented body of evidence that provides a convincing and valid argument that a system is adequately safe for a given application in a given environment. To enable argumentation about adequate safety as well as to document safety cases, topics such as e.g., 'dependability concepts', 'safety critical processes', 'certification', 'hazard analysis', 'FTA/FMEA', 'process-based vs. product-based arguments for safety cases argumentation', 'textual vs. graphical argumentation', 'modular and pattern-based argumentation using GSN (Goal Structuring Notation)', 'taxonomy of common fallacies in argumentation' and standards such as e.g., 'ISO 26262' will be covered."},{"id": 777, "name": "Applied Artificial Intelligence", "ects": "15.0", "semester": "Spring 18, Period 2", "description": "There are several algorithms in Artificial Intelligence, e.g. machine learning that solve various types of problems. In this course, we will discuss how they can be implemented and used in a specific problem. We will also address the problem of choosing right algorithm for a given problem and integrate it into a system in an efficient way."},{"id": 807, "name": "User Experience Design and Usability", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The course provides an opportunity to develop skill in experience design and design"},{"id": 819, "name": "Industrial System Development", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "Industrial software development has to deal not only with the complexity of the application as is, but must also take into account external factors, notably revenue, product research, customer satisfaction, and so on. In this respect, industrial practices are very often the result of years of adaptations and optimizations of state-of-the-art solutions devoted to make the development process effective. This course provides the students with real-world industrial systems development experiences. In particular, the course focuses on the general issues arising in the development of such systems, and proposes specific cases as presented by industrial guest lecturers."},{"id": 820, "name": "Development of web applications", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": null},{"id": 833, "name": "Software Verification and Validation", "ects": "7.5", "semester": "Autumn 18, Period 2", "description": "The focus of this course will be on software testing. A variety of test techniques will be covered along with applicability aspects as well as the bindings on software reliability modeling. The course includes Introduction to Software verification and Validation, Software Testing overview and classifications, Functional (black box) testing, Structural (white box) testing, Integration testing, Mutation testing, Model-based testing and Test case generation, Software reliability modeling together with bindings on testing, Overview of testing process, testing tools and automation. The contents will reflect latest research topics as well as industrial practices. Guest lectures by industrial experts will be the highlight of this course."},{"id": 857, "name": "Science, research methods and scientific papers, with focus on computer science", "ects": "7.5", "semester": "Autumn 18, Period 1", "description": "The purpose of the course is to raise the students\u2019 scientific awareness and knowledge of methods used in computer science research. The course introduces students to basic concepts in the philosophy of science, and gives an overview of different research methods in science and technology, especially those in computer science. A central part of the course handles scientific writing. Important skills like searching for sources, writing, reviewing, presenting, and opposing scientific papers are trained. Students will write an own paper, connecting their everyday work with relevant issues in science and research, thereby improving their scientific awareness, knowledge and skill."},]