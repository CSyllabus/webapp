[{"pk": 6, "model": "csyllabusapi.country", "fields": {"modified": "2017-10-30T15:20:52.235Z", "name": "United States of America", "img": "https://static.thousandwonders.net/Washington.D.C..original.14.jpg", "created": "2017-10-30T15:20:51.049Z"}}, {"pk": 10, "model": "csyllabusapi.city", "fields": {"modified": "2017-10-30T15:20:52.235Z", "country": 6, "name": "Palo Alto", "img": "https://fr.wikipedia.org/wiki/Palo_Alto#/media/File:Stanford_University_campus_from_above.jpg", "created": "2017-10-30T15:20:51.049Z"}}, {"pk": 7, "model": "csyllabusapi.university", "fields": {"city": 10, "name": "University of Stanford", "img": "http://www.neucampusplanning.com/wp-content/uploads/2016/08/Stanford-Aerial.jpg", "created": "2017-10-30T15:05:19.541Z", "country": 6, "modified": "2017-10-30T15:05:20.945Z"}}, {"pk": 37, "model": "csyllabusapi.program", "fields": {"created": "2017-10-30T15:07:40.122Z", "name": "Computer Science and Engineering", "modified": "2017-10-30T15:07:41.673Z", "study_level": "undergraduate and graduate"}}, {"pk": 37, "model": "csyllabusapi.programuniversity", "fields": {"university": 7, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 37, "model": "csyllabusapi.programcity", "fields": {"city": 10, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 37, "model": "csyllabusapi.programcountry", "fields": {"country": 6, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2424, "model": "csyllabusapi.courseprogram", "fields": {"course": 693, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2424, "model": "csyllabusapi.courseuniversity", "fields": {"course": 693, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 693, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Computing at Stanford", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For those with limited experience with computers or who want to learn more about Stanford's computing environment. Topics include: computer maintenance and security, computing resources, Internet privacy, and copyright law. One-hour lecture/demonstration in dormitory clusters prepared and administered weekly by the Resident Computer Consultant (RCC). Final project. Not a programming course."}}, {"pk": 2425, "model": "csyllabusapi.courseprogram", "fields": {"course": 694, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2425, "model": "csyllabusapi.courseuniversity", "fields": {"course": 694, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 694, "model": "csyllabusapi.course", "fields": {"name": "Practical Unix", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "A practical introduction to using the Unix operating system with a focus on Linux command line skills. Class will consist of video tutorials and weekly hands-on lab sections. The time listed on AXESS is for the first week's logistical meeting only. Topics include: grep and regular expressions, ZSH, Vim and Emacs, basic and advanced GDB features, permissions, working with the file system, revision control, Unix utilities, environment customization, and using Python for shell scripts. Topics may be added, given sufficient interest. Course website: http://cs1u.stanford.edu"}}, {"pk": 2426, "model": "csyllabusapi.courseprogram", "fields": {"course": 695, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2426, "model": "csyllabusapi.courseuniversity", "fields": {"course": 695, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 695, "model": "csyllabusapi.course", "fields": {"name": "Personal Finance for Engineers", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the fundamentals and analysis specifically needed by engineers to make informed and intelligent financial decisions. Course will focus on actual industry-based financial information from technology companies and realistic financial issues. Topics include: behavioral finance, budgeting, debt, compensation, stock options, investing and real estate. No prior finance or economics experience required."}}, {"pk": 2427, "model": "csyllabusapi.courseprogram", "fields": {"course": 696, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2427, "model": "csyllabusapi.courseuniversity", "fields": {"course": 696, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 696, "model": "csyllabusapi.course", "fields": {"name": "Problem-Solving for the CS Technical Interview", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will prepare students to interview for software engineering and related internships and full-time positions in industry. Drawing on multiple sources of actual interview questions, students will learn key problem-solving strategies specific to the technical/coding interview. Students will be encouraged to synthesize information they have learned across different courses in the major. Emphasis will be on the oral and combination written-oral modes of communication common in coding interviews, but which are unfamiliar settings for problem solving for many students. Prerequisites: CS 106B or X."}}, {"pk": 2428, "model": "csyllabusapi.courseprogram", "fields": {"course": 697, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2428, "model": "csyllabusapi.courseuniversity", "fields": {"course": 697, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 697, "model": "csyllabusapi.course", "fields": {"name": "Tensorflow for Deep Learning Research", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will cover the fundamentals and contemporary usage of the Tensorflow library for deep learning research. Through the course, students will use Tensorflow to build models of different complexity, from simple linear/logistic regression to convolutional neural network and recurrent neural networks with LSTM to solve tasks such as word embeddings, translation, optical character recognition. Students will also learn best practices to structure a model and manage research experiments. Prerequisites: CS229 or CS224D/N."}}, {"pk": 2429, "model": "csyllabusapi.courseprogram", "fields": {"course": 698, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2429, "model": "csyllabusapi.courseuniversity", "fields": {"course": 698, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 698, "model": "csyllabusapi.course", "fields": {"name": "The Social & Economic Impact of Artificial Intelligence (IPS 200)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Recent advances in computing may place us at the threshold of a unique turning point in human history. Soon we are likely to entrust management of our environment, economy, security, infrastructure, food production, healthcare, and to a large degree even our personal activities, to artificially intelligent computer systems. The prospect of \"turning over the keys\" to increasingly autonomous systems raises many complex and troubling questions. How will society respond as versatile robots and machine-learning systems displace an ever-expanding spectrum of blue- and white-collar workers? Will the benefits of this technological revolution be broadly distributed or accrue to a lucky few? How can we ensure that these systems respect our ethical principles when they make decisions at speeds and for rationales that exceed our ability to comprehend? What, if any, legal rights and responsibilities should we grant them? And should we regard them merely as sophisticated tools or as a newly emerging form of life? The goal of CS22 is to equip students with the intellectual tools, ethical foundation, and psychological framework to successfully navigate the coming age of intelligent machines."}}, {"pk": 2430, "model": "csyllabusapi.courseprogram", "fields": {"course": 699, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2430, "model": "csyllabusapi.courseuniversity", "fields": {"course": 699, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 699, "model": "csyllabusapi.course", "fields": {"name": "Artificial Intelligence, Entrepreneurship and Society in the 21st Century and Beyond", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Technical developments in artificial intelligence (AI) have opened up new opportunities for entrepreneurship, as well as raised profound longer term questions about how human societal and economic systems may be re\u00c2\u00adorganized to accommodate the rise of intelligent machines. In this course, closely co\u00c2\u00adtaught by a Stanford professor and a leading Silicon Valley venture capitalist, we will examine the current state of the art capabilities of existing artificial intelligence systems, as well as economic challenges and opportunities in early stage startups and large companies that could leverage AI. We will focus on gaps between business needs and current technical capabilities to identify high impact directions for the development of future AI technology. Simultaneously, we will explore the longer term societal impact of AI driven by inexorable trends in technology and entrepreneurship. The course includes guest lectures from leading technologists and entrepreneurs who employ AI in a variety of fields, including healthcare, education, self\u00c2\u00addriving cars, computer security, natural language interfaces, computer vision systems, and hardware acceleration."}}, {"pk": 2431, "model": "csyllabusapi.courseprogram", "fields": {"course": 700, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2431, "model": "csyllabusapi.courseuniversity", "fields": {"course": 700, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 700, "model": "csyllabusapi.course", "fields": {"name": "Functional Programming in Clojure", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Clojure is a dialect of Lisp that runs on the JVM, CLR, or Javascript engine. This course explores the fundamentals and philosophy of Clojure, with emphasis on the benefits of immutability and functional programming that make it such a powerful and fun language. Topics include: immutability, functional programming (function composition, higher order functions), concurrency (atoms, promises, futures, actors, Software Transactional Memory, etc), LISP (REPL-driven development, homoiconicity, macros), and interop (between Clojure code and code native to the host VM). The course also explores design paradigms and looks at the differences between functional programing and object-oriented programing, as well as bottom-up versus top-down design."}}, {"pk": 2432, "model": "csyllabusapi.courseprogram", "fields": {"course": 701, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2432, "model": "csyllabusapi.courseuniversity", "fields": {"course": 701, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 701, "model": "csyllabusapi.course", "fields": {"name": "Computers and Photography: From Capture to Sharing", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own."}}, {"pk": 2433, "model": "csyllabusapi.courseprogram", "fields": {"course": 702, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2433, "model": "csyllabusapi.courseuniversity", "fields": {"course": 702, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 702, "model": "csyllabusapi.course", "fields": {"name": "Using Bits to Control Atoms", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This is a crash course in how to use a stripped-down computer system aboutnthe size of a credit card (the rasberry pi computer) to control as manyndifferent sensors as we can implement in ten weeks, including LEDs, motionnsensors, light controllers, and accelerometers.  The ability to fearlesslyngrab a set of hardware devices, examine the data sheet to see how to usenit, and stitch them  together using simple code is a secret weapon thatnsoftware-only people lack, and allows you to build many interestingngadgets.  We will start with a ``bare metal'' system --- no operatingnsystem, no support --- and teach you how to read device data sheetsndescribing sensors and write the minimal code needed to control themn(including how to debug when things go wrong, as they always do).  Thisncourse differs from most in that it is deliberately mostly about what andnwhy rather than how --- our hope is that the things you are able at the endnwill inspire you to follow the rest of the CS curriculum to understandnbetter how things you've used work. Prerequisites: knowledge of the Cnprogramming language.  A Linux or Mac laptop that you are comfortablencoding on."}}, {"pk": 2434, "model": "csyllabusapi.courseprogram", "fields": {"course": 703, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2434, "model": "csyllabusapi.courseuniversity", "fields": {"course": 703, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 703, "model": "csyllabusapi.course", "fields": {"name": "Using Tech for Good", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Students in the class will work in small teams to implement high-impact projects for partner organizations. Taught by the CS+Social Good team, the aim of the class is to empower you to leverage technology for social good by inspiring action, facilitating collaboration, and forging pathways towards global change. Recommended: CS 106B, CS 42 or 142. Class is open to students of all years. May be repeated for credit. Cardinal Course certified by the Haas Center."}}, {"pk": 2435, "model": "csyllabusapi.courseprogram", "fields": {"course": 704, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2435, "model": "csyllabusapi.courseuniversity", "fields": {"course": 704, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 704, "model": "csyllabusapi.course", "fields": {"name": "CS + Social Good Studio: Designing Social Impact Projects", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Get real-world experience launching and developing your own social impact projects! Students work in small teams to develop high-impact projects around problem domains provided by partner organizations, under the guidance and support of design/technical coaches from industry and non-profit domain experts. Along with support, resources, and community discussion, the class provides an outlet for students to create social change through CS while providing students with experience engaging in the full product development cycle on real-world projects. Prerequisite: CS 147, equivalent experience, or consent of instructors."}}, {"pk": 2436, "model": "csyllabusapi.courseprogram", "fields": {"course": 705, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2436, "model": "csyllabusapi.courseuniversity", "fields": {"course": 705, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 705, "model": "csyllabusapi.course", "fields": {"name": "CS + Social Good: Implementing Social Impact Projects", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Continuation of CS51 (CS + Social Good Studio: Designing Social Impact Projects)nnTeams enter the quarter having completed and tested a minimal viable product (MVP) with a well-defined target user, and a community partner. Students will learn to apply scalable technical frameworks, methods to measure social impact, tools for deployment, user acquisition techniques and growth/exit strategies. The purpose of the class is to facilitate students to build a sustainable infrastructure around their product idea. CS52 will host mentors, guest speakers and industry experts for various workshops and coaching-sessions. The class culminates in a showcase where students share their projects with stakeholders and the public. Prerequisite: CS 51, or consent of instructor."}}, {"pk": 2437, "model": "csyllabusapi.courseprogram", "fields": {"course": 706, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2437, "model": "csyllabusapi.courseuniversity", "fields": {"course": 706, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 706, "model": "csyllabusapi.course", "fields": {"name": "Discussion in Tech for Good", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course introduces students to various intersections of social good and technology through a weekly discussion and speaker series. Students will be given a space to exchange ideas and experiences regarding a certain social issue. Invited speakers come from industry, academia, and non-profit organizations. They will share their career paths, what drove them to these fields, and advice for students. The topics examined will span a broad variety of social issues -- from race and class to education and sustainability -- and help students better understand how to kick off their journey in using computer science for social good."}}, {"pk": 2438, "model": "csyllabusapi.courseprogram", "fields": {"course": 707, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2438, "model": "csyllabusapi.courseuniversity", "fields": {"course": 707, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 707, "model": "csyllabusapi.course", "fields": {"name": "Great Discoveries and Inventions in Computing", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This seminar will explore some of both the great discoveries that underlie computer science and the inventions that have produced the remarkable advances in computing technology. Key questions we will explore include: What is computable? How can information be securely communicated? How do computers fundamentally work? What makes computers fast? Our exploration will look both at the principles behind the discoveries and inventions, as well as the history and the people involved in those events. Some exposure to programming will be helpful, but it not strictly necessary."}}, {"pk": 2439, "model": "csyllabusapi.courseprogram", "fields": {"course": 708, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2439, "model": "csyllabusapi.courseuniversity", "fields": {"course": 708, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 708, "model": "csyllabusapi.course", "fields": {"name": "Let There Be Computations", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "The class will discuss the Theory of Computing as an ambitious intellectual endeavor with impact beyond Computer Science.  What are computations? How can their study capture important aspects of the evolution of species, the structure of social networks, and the working of your smart phone? What are the laws of efficiency and complexity that govern computations? We will see surprising algorithms for very familiar problems as well as simple problems no one knows how to solve efficiently. We will encounter logic paradoxes that expose the limitations of computations and explore the different worlds we may be living in, depending on the answers to some of the central problems on computations.n nThe class is intended for students with a wide range of interests. The course will not involve programming. While our class will not rely on any deep mathematics (beyond basic high-school math) we will deal with mathematical formalization of concepts and with mathematical problem-solving. Therefore, some mathematical maturity and interest would be useful."}}, {"pk": 2440, "model": "csyllabusapi.courseprogram", "fields": {"course": 709, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2440, "model": "csyllabusapi.courseuniversity", "fields": {"course": 709, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 709, "model": "csyllabusapi.course", "fields": {"name": "Playback Theater For Research", "ects": 2, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are alwaysnmoving together, from the known, to the unknown, and back.nThere is limited enrollment for this class. Application is required. Apply here: https://docs.google.com/forms/d/1gR4bGkFZh_ycMBGMz1AIIuyv7WyQfX5xTjanGlclK-A/prefill"}}, {"pk": 2441, "model": "csyllabusapi.courseprogram", "fields": {"course": 710, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2441, "model": "csyllabusapi.courseuniversity", "fields": {"course": 710, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 710, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Computing Principles", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduces the essential ideas of computing: data representation, algorithms, programming \"code\", computer hardware, networking, security, and social issues. Students learn how computers work and what they can do through hands-on exercises. In particular, students will see the capabilities and weaknesses of computer systems so they are not mysterious or intimidating. Course features many small programming exercises, although no prior programming experience is assumed or required. CS101 is not a complete programming course such as CS106A. CS101 is effectively an alternative to CS105. A laptop computer is recommended for the in-class exercises."}}, {"pk": 2442, "model": "csyllabusapi.courseprogram", "fields": {"course": 711, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2442, "model": "csyllabusapi.courseuniversity", "fields": {"course": 711, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 711, "model": "csyllabusapi.course", "fields": {"name": "Big Data: Tools and Techniques, Discoveries and Pitfalls", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Aimed at non-CS undergraduate and graduate students who want to learn the basics of big data tools and techniques and apply that knowledge in their areas of study. Many of the world's biggest discoveries and decisions in science, technology, business, medicine, politics, and society as a whole, are now being made on the basis of analyzing massive data sets. At the same time, it is surprisingly easy to make errors or come to false conclusions from data analysis alone. This course provides a broad and practical introduction to big data: data analysis techniques including databases, data mining, and machine learning; data analysis tools including spreadsheets, relational databases and SQL, Python, and R; data visualization techniques and tools; pitfalls in data collection and analysis; historical context, privacy, and other ethical issues. Tools and techniques are hands-on but at a cursory level, providing a basis for future exploration and application. Prerequisites: comfort with basic logic and mathematical concepts, along with high school AP computer science, CS106A, or other equivalent programming experience."}}, {"pk": 2443, "model": "csyllabusapi.courseprogram", "fields": {"course": 712, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2443, "model": "csyllabusapi.courseuniversity", "fields": {"course": 712, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 712, "model": "csyllabusapi.course", "fields": {"name": "Mathematical Foundations of Computing", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Mathematical foundations required for computer science, including propositional predicate logic, induction, sets, functions, and relations. Formal language theory, including regular expressions, grammars, finite automata, Turing machines, and NP-completeness. Mathematical rigor, proof techniques, and applications. Prerequisite: CS106B or equivalent.  CS106B may be taken concurrently with CS103."}}, {"pk": 2444, "model": "csyllabusapi.courseprogram", "fields": {"course": 713, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2444, "model": "csyllabusapi.courseuniversity", "fields": {"course": 713, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 713, "model": "csyllabusapi.course", "fields": {"name": "Mathematical Problem-solving Strategies", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Problem solving strategies and techniques in discrete mathematics and computer science. Additional problem solving practice for CS103. In-class participation required. Prerequisite: consent of instructor. Co-requisite: CS103."}}, {"pk": 2445, "model": "csyllabusapi.courseprogram", "fields": {"course": 714, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2445, "model": "csyllabusapi.courseuniversity", "fields": {"course": 714, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 714, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Computers", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For non-technical majors. What computers are and how they work. Practical experience in programming. Construction of computer programs and basic design techniques. A survey of Internet technology and the basics of computer hardware. Students in technical fields and students looking to acquire programming skills should take 106A or 106X. Students with prior computer science experience at the level of 106 or above require consent of instructor. Prerequisite: minimal math skills."}}, {"pk": 2446, "model": "csyllabusapi.courseprogram", "fields": {"course": 715, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2446, "model": "csyllabusapi.courseuniversity", "fields": {"course": 715, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 715, "model": "csyllabusapi.course", "fields": {"name": "Programming Methodology (ENGR 70A)", "ects": 2, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the engineering of computer applications emphasizing modern software engineering principles: object-oriented design, decomposition, encapsulation, abstraction, and testing. Emphasis is on good programming style and the built-in facilities of respective languages. No prior programming experience required. Summer quarter enrollment is limited. Alternative versions of CS106A are available which cover most of the same material but in different programming languages: Java [Fall, Win, Spr, or Sum qtr enroll in CS106A Section 1] Javascript [Fall qtr enroll in CS 106A Section 2] Python [Winter or Spring qtr enroll in CS 106A Section 3]"}}, {"pk": 2447, "model": "csyllabusapi.courseprogram", "fields": {"course": 716, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2447, "model": "csyllabusapi.courseuniversity", "fields": {"course": 716, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 716, "model": "csyllabusapi.course", "fields": {"name": "Programming Methodology in JavaScript", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the engineering of computer applications emphasizing modern software engineering principles: object-oriented design, decomposition, encapsulation, abstraction, and testing. Uses the JavaScript programming language. Emphasis is on good programming style and the built-in facilities of the JavaScript language. No prior programming experience required. This course covers most of the same material as CS106A Section 1 in Java and CS 106A Section 3 in Python, but this course uses the JavaScript programming language. To enroll in this class, enroll in CS 106A Section 2 for Fall Qtr. May be taken for 3 units by grad students."}}, {"pk": 2448, "model": "csyllabusapi.courseprogram", "fields": {"course": 717, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2448, "model": "csyllabusapi.courseuniversity", "fields": {"course": 717, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 717, "model": "csyllabusapi.course", "fields": {"name": "Programming Methodology in Python", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the engineering of computer applications in Python, emphasizing modern software engineering principles: decomposition, abstraction, and testing. Emphasis is on good programming style. This course covers most of the same material as CS106A Section 1 in Java and CS 106A Section 2 in JavaScript, but this course uses the Python programming language which is popular for general engineering and web development. Required readings will all be available for free on the web. Students are encouraged to bring a laptop to lecture to do the live exercises which are integrated with lecture. No prior programming experience required. To enroll in this class, enroll in CS 106A Section 3. May be taken for 3 units by grad students. Enrollment is limited for winter quarter 2017-18 but from spring quarter 2017-18 enrollment will be unlimited."}}, {"pk": 2449, "model": "csyllabusapi.courseprogram", "fields": {"course": 718, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2449, "model": "csyllabusapi.courseuniversity", "fields": {"course": 718, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 718, "model": "csyllabusapi.course", "fields": {"name": "Programming Abstractions (ENGR 70B)", "ects": 2, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Abstraction and its relation to programming. Software engineering principles of data abstraction and modularity. Object-oriented programming, fundamental data structures (such as stacks, queues, sets) and data-directed design. Recursion and recursive data structures (linked lists, trees, graphs). Introduction to time and space complexity analysis. Uses the programming language C++ covering its basic facilities. Prerequisite: 106A or equivalent. Summer quarter enrollment is limited."}}, {"pk": 2450, "model": "csyllabusapi.courseprogram", "fields": {"course": 719, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2450, "model": "csyllabusapi.courseuniversity", "fields": {"course": 719, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 719, "model": "csyllabusapi.course", "fields": {"name": "Practical Exploration of Computing", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "A follow up class to CS106A for non-majors which will both provide practical web programming skills and cover essential computing topics including computer security and privacy. Additional topics will include digital representation of images and music, an exploration of how the Internet works, and a look at the internals of the computer. Students taking the course for 4 units will be required to carry out supplementary programming assignments in addition to the course's regular assignments. Prerequisite: 106A or equivalent"}}, {"pk": 2451, "model": "csyllabusapi.courseprogram", "fields": {"course": 720, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2451, "model": "csyllabusapi.courseuniversity", "fields": {"course": 720, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 720, "model": "csyllabusapi.course", "fields": {"name": "Standard C++ Programming Laboratory", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Supplemental lab to 106B and 106X. Additional features of standard C++ programming practice. Possible topics include advanced C++ language features, standard libraries, STL containers and algorithms, object memory management, operator overloading, and inheritance. Prerequisite: consent of instructor. Corequisite: 106B or 106X."}}, {"pk": 2452, "model": "csyllabusapi.courseprogram", "fields": {"course": 721, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2452, "model": "csyllabusapi.courseuniversity", "fields": {"course": 721, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 721, "model": "csyllabusapi.course", "fields": {"name": "Programming Abstractions and Social Good", "ects": 4, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Supplemental lab to CS 106B and CS 106X. Students will apply fundamental computer science concepts learned in 106B/X to problems in the social good space (such as health, government, education, and environment). Course consists of in-class activities designed by local tech companies and nonprofits.  Corequisite: 106B or 106X."}}, {"pk": 2453, "model": "csyllabusapi.courseprogram", "fields": {"course": 722, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2453, "model": "csyllabusapi.courseuniversity", "fields": {"course": 722, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 722, "model": "csyllabusapi.course", "fields": {"name": "Programming Abstractions (Accelerated) (ENGR 70X)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Intensive version of 106B for students with a strong programming background interested in a rigorous treatment of the topics at an accelerated pace. Additional advanced material and more challenging projects. Winter quarter assignments will be based in CS department research.  Prerequisite: excellence in 106A or equivalent, or consent of instructor.  Winter quarter enrollment limited to 30."}}, {"pk": 2454, "model": "csyllabusapi.courseprogram", "fields": {"course": 723, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2454, "model": "csyllabusapi.courseuniversity", "fields": {"course": 723, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 723, "model": "csyllabusapi.course", "fields": {"name": "Computer Organization and Systems", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the fundamental concepts of computer systems. Explores how computer systems execute programs and manipulate data, working from the C programming language down to the microprocessor. Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, elements of code compilation, memory organization and management, and performance evaluation and optimization. Prerequisites: 106B or X, or consent of instructor."}}, {"pk": 2455, "model": "csyllabusapi.courseprogram", "fields": {"course": 724, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2455, "model": "csyllabusapi.courseuniversity", "fields": {"course": 724, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 724, "model": "csyllabusapi.course", "fields": {"name": "Computer Systems from the Ground Up", "ects": 3, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $50 required lab fee."}}, {"pk": 2456, "model": "csyllabusapi.courseprogram", "fields": {"course": 725, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2456, "model": "csyllabusapi.courseuniversity", "fields": {"course": 725, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 725, "model": "csyllabusapi.course", "fields": {"name": "Object-Oriented Systems Design", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Software design and construction in the context of large OOP libraries. Taught in Java. Topics: OOP design, design patterns, testing, graphical user interface (GUI) OOP libraries, software engineering strategies, approaches to programming in teams. Prerequisite: 107."}}, {"pk": 2457, "model": "csyllabusapi.courseprogram", "fields": {"course": 726, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2457, "model": "csyllabusapi.courseuniversity", "fields": {"course": 726, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 726, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Probability for Computer Scientists", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Topics include: counting and combinatorics, random variables, conditional probability, independence, distributions, expectation, point estimation, and limit theorems. Applications of probability in computer science including machine learning and the use of probability in the analysis of algorithms. Prerequisites: 103, 106B or X, multivariate calculus at the level of MATH 51 or CME 100 or equivalent."}}, {"pk": 2458, "model": "csyllabusapi.courseprogram", "fields": {"course": 727, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2458, "model": "csyllabusapi.courseuniversity", "fields": {"course": 727, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 727, "model": "csyllabusapi.course", "fields": {"name": "Principles of Computer Systems", "ects": 2, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Principles and practice of engineering of computer software and hardware systems. Topics include: techniques for controlling complexity; strong modularity using client-server design, virtual memory, and threads; networks; atomicity and coordination of parallel activities; security, and encryption; and performance optimizations. Prerequisite: 107."}}, {"pk": 2459, "model": "csyllabusapi.courseprogram", "fields": {"course": 728, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2459, "model": "csyllabusapi.courseuniversity", "fields": {"course": 728, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 728, "model": "csyllabusapi.course", "fields": {"name": "From Languages to Information (LINGUIST 180, LINGUIST 280)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Extracting meaning, information, and structure from human language text, speech, web pages, social networks. Methods include: string algorithms,edit distance, language modeling, the noisy channel, naive Bayes, inverted indices, collaborative filtering, PageRank. Applications such as question answering, sentiment analysis, information retrieval, text classification, social network models, chatbots, sequence alignment, spell checking, speech processing, recommender systems. nPrerequisites: CS103, CS107, CS109."}}, {"pk": 2460, "model": "csyllabusapi.courseprogram", "fields": {"course": 729, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2460, "model": "csyllabusapi.courseuniversity", "fields": {"course": 729, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 729, "model": "csyllabusapi.course", "fields": {"name": "Computer Vision: Foundations and Applications", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Robots that can navigate space and perform duties, search engines that can index billions of images and videos, algorithms that can diagnose medical images for diseases, or smart cars that can see and drive safely: Lying in the heart of these modern AI applications are computer vision technologies that can perceive, understand and reconstruct the complex visual world. This course is designed for students who are interested in learning about the fundamental principles and important applications of computer vision. Course will introduce a number of fundamental concepts in computer vision and expose students to a number of real-world applications, plus guide students through a series of projects such that they will get to implement cutting-edge computer vision algorithms. Prerequisites: Students should be familiar with Python (i.e. have programmed in Python before) and Linux; plus Calculus & Linear Algebra."}}, {"pk": 2461, "model": "csyllabusapi.courseprogram", "fields": {"course": 730, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2461, "model": "csyllabusapi.courseuniversity", "fields": {"course": 730, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 730, "model": "csyllabusapi.course", "fields": {"name": "Operating Systems and Systems Programming", "ects": 2, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Operating systems design and implementation. Basic structure; synchronization and communication mechanisms; implementation of processes, process management, scheduling, and protection; memory organization and management, including virtual memory; I/O device management, secondary storage, and file systems. Prerequisite: CS 110."}}, {"pk": 2462, "model": "csyllabusapi.courseprogram", "fields": {"course": 731, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2462, "model": "csyllabusapi.courseuniversity", "fields": {"course": 731, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 731, "model": "csyllabusapi.course", "fields": {"name": "Operating systems design and implementation", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This is an experimental course offering.  Students will implement a simple, clean operating system (virtual memory, processes, file system) on a rasberry pi computer and use the result to run a variety of devices.  Enrollment is limited, and students should expect the course to have rough edges since it is the first offering."}}, {"pk": 2463, "model": "csyllabusapi.courseprogram", "fields": {"course": 732, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2463, "model": "csyllabusapi.courseuniversity", "fields": {"course": 732, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 732, "model": "csyllabusapi.course", "fields": {"name": "Web Applications", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Concepts and techniques used in constructing interactive web applications. Browser-side web facilities such as HTML, cascading stylesheets, the document object model, and JavaScript frameworks and Server-side technologies such as server-side JavaScript, sessions, and object-oriented databases. Issues in web security and application scalability. New models of web application deployment. Prerequisites: CS 107 and CS 108."}}, {"pk": 2464, "model": "csyllabusapi.courseprogram", "fields": {"course": 733, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2464, "model": "csyllabusapi.courseuniversity", "fields": {"course": 733, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 733, "model": "csyllabusapi.course", "fields": {"name": "Compilers", "ects": 2, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Principles and practices for design and implementation of compilers and interpreters. Topics: lexical analysis; parsing theory; symbol tables; type systems; scope; semantic analysis; intermediate representations; runtime environments; code generation; and basic program analysis and optimization. Students construct a compiler for a simple object-oriented language during course programming projects. Prerequisites: 103 or 103B, and 107."}}, {"pk": 2465, "model": "csyllabusapi.courseprogram", "fields": {"course": 734, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2465, "model": "csyllabusapi.courseuniversity", "fields": {"course": 734, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 734, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Computer Networking", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Principles and practice. Structure and components of computer networks, packet switching, layered architectures. Applications: web/http, voice-over-IP, p2p file sharing and socket programming. Reliable transport: TCP/IP, reliable transfer, flow control, and congestion control. The network layer: names and addresses, routing. Local area networks: ethernet and switches. Wireless networks and network security. Prerequisite: CS 110."}}, {"pk": 2466, "model": "csyllabusapi.courseprogram", "fields": {"course": 735, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2466, "model": "csyllabusapi.courseuniversity", "fields": {"course": 735, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 735, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Databases", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "The course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL.The course includes database design and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Class time will include guest speakers from industry and additional advanced topics as time and class interest permits. Prerequisites: 103 and 107 (or equivalent)."}}, {"pk": 2467, "model": "csyllabusapi.courseprogram", "fields": {"course": 736, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2467, "model": "csyllabusapi.courseuniversity", "fields": {"course": 736, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 736, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Game Design and Development", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This project-based course provides an introduction to game design covering topics like 2D/3D Art, Audio, User Interfaces, Production, Narrative Design, Marketing, and Publishing. Speakers from the profession will provide relevant context during a weekly seminar. Weekly assignments include in-depth materials and require students to independently create small video games. Classroom meetings will be used to foster student project discussions, and deepen understanding of material. The course culminates with students forming project teams to create a final video game. Assignments will be completed within the Unity game development engine; prior Unity experience is not required. Given class size limitations, an online survey will be distributed before class starts and students will be selected so to achieve a diverse class composition. Prerequisite: CS 106A or equivalent programming experience."}}, {"pk": 2468, "model": "csyllabusapi.courseprogram", "fields": {"course": 737, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2468, "model": "csyllabusapi.courseuniversity", "fields": {"course": 737, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 737, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Human-Computer Interaction Design", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics: user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: work with a team on a quarter-long design project, supported by lectures, readings, and studios. Prerequisite: 106B or X or equivalent programming experience. Recommended that CS Majors have also taken one of 142, 193P, or 193A."}}, {"pk": 2469, "model": "csyllabusapi.courseprogram", "fields": {"course": 738, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2469, "model": "csyllabusapi.courseuniversity", "fields": {"course": 738, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 738, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Computer Graphics and Imaging", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introductory prerequisite course in the computer graphics sequence introducing students to the technical concepts behind creating synthetic computer generated images. Focuses on using OpenGL to create visual imagery, as well as an understanding of the underlying mathematical concepts including triangles, normals, interpolation, texture mapping, bump mapping, etc. Course will cover fundamental understanding of light and color, as well as how it impacts computer displays and printers. Class will discuss more thoroughly how light interacts with the environment, constructing engineering models such as the BRDF, plus various simplifications into more basic lighting and shading models. Also covers ray tracing technology for creating virtual images, while drawing parallels between ray tracers and real world cameras to illustrate various concepts. Anti-aliasing and acceleration structures are also discussed. The final class mini-project consists of building out a ray tracer to create visually compelling images. Starter codes and code bits will be provided to aid in development, but this class focuses on what you can do with the code as opposed to what the code itself looks like. Therefore grading is weighted toward in person \"demos\" of the code in action - creativity and the production of impressive visual imagery are highly encouraged. Prerequisites: CS 107, MATH 51."}}, {"pk": 2470, "model": "csyllabusapi.courseprogram", "fields": {"course": 739, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2470, "model": "csyllabusapi.courseuniversity", "fields": {"course": 739, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 739, "model": "csyllabusapi.course", "fields": {"name": "Parallel Computing", "ects": 3, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course is an introduction to parallelism and parallel programming.  Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics:  varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism).  Significant parallel programming assignments will be given as homework.  The course is open to students who have completed the introductory CS course sequence through 110 and have taken CS 143."}}, {"pk": 2471, "model": "csyllabusapi.courseprogram", "fields": {"course": 740, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2471, "model": "csyllabusapi.courseuniversity", "fields": {"course": 740, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 740, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Automata and Complexity Theory", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course provides a mathematical introduction to the following questions: What is computation? Given a computational model, what problems can we hope to solve in principle with this model? Besides those solvable in principle, what problems can we hope to efficiently solve? In many cases we can give completely rigorous answers; in other cases, these questions have become major open problems in computer science and mathematics. By the end of this course, students will be able to classify computational problems in terms of their computational complexity (Is the problem regular? Not regular? Decidable? Recognizable? Neither? Solvable in P? NP-complete? PSPACE-complete?, etc.). Students will gain a deeper appreciation for some of the fundamental issues in computing that are independent of trends of technology, such as the Church-Turing Thesis and the P versus NP problem. Prerequisites: CS 103 or 103B."}}, {"pk": 2472, "model": "csyllabusapi.courseprogram", "fields": {"course": 741, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2472, "model": "csyllabusapi.courseuniversity", "fields": {"course": 741, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 741, "model": "csyllabusapi.course", "fields": {"name": "Computer and Network Security", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix."}}, {"pk": 2473, "model": "csyllabusapi.courseprogram", "fields": {"course": 742, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2473, "model": "csyllabusapi.courseuniversity", "fields": {"course": 742, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 742, "model": "csyllabusapi.course", "fields": {"name": "Logic and Automated Reasoning", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "An elementary exposition from a computational point of view of propositional and predicate logic, axiomatic theories, and theories with equality and induction. Interpretations, models, validity, proof, strategies, and applications. Automated deduction: polarity, skolemization, unification, resolution, equality. Prerequisite: 103 or 103B."}}, {"pk": 2474, "model": "csyllabusapi.courseprogram", "fields": {"course": 743, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2474, "model": "csyllabusapi.courseuniversity", "fields": {"course": 743, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 743, "model": "csyllabusapi.course", "fields": {"name": "Design and Analysis of Algorithms", "ects": 3, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116."}}, {"pk": 2475, "model": "csyllabusapi.courseprogram", "fields": {"course": 744, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2475, "model": "csyllabusapi.courseuniversity", "fields": {"course": 744, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 744, "model": "csyllabusapi.course", "fields": {"name": "Data Structures", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Techniques in the design, analysis, and implementation of data structures.  Isometries between data structures (including red/black trees and 2-3-4 trees), amortized analysis (including Fibonacci heaps and splay trees), and randomization (including count-min sketches and dynamic perfect hash tables).  Data structures for integers and strings (including van Emde Boas trees and suffix trees).  Possible additional topics include functional data structures, concurrent data structures, and spatial data structures.  Prerequisites: CS107 and CS161."}}, {"pk": 2476, "model": "csyllabusapi.courseprogram", "fields": {"course": 745, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2476, "model": "csyllabusapi.courseuniversity", "fields": {"course": 745, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 745, "model": "csyllabusapi.course", "fields": {"name": "The Modern Algorithmic Toolbox", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor."}}, {"pk": 2477, "model": "csyllabusapi.courseprogram", "fields": {"course": 746, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2477, "model": "csyllabusapi.courseuniversity", "fields": {"course": 746, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 746, "model": "csyllabusapi.course", "fields": {"name": "Stanford Laptop Orchestra: Composition, Coding, and Performance (MUSIC 128)", "ects": 3, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Classroom instantiation of the Stanford Laptop Orchestra (SLOrk) which includes public performances. An ensemble of more than 20 humans, laptops, controllers, and special speaker arrays designed to provide each computer-mediated instrument with its sonic identity and presence. Topics and activities include issues of composing for laptop orchestras, instrument design, sound synthesis, programming, and live performance. May be repeated four times for credit. Space is limited; see https://ccrma.stanford.edu/courses/128 for information about the application and enrollment process. May be repeat for credit"}}, {"pk": 2478, "model": "csyllabusapi.courseprogram", "fields": {"course": 747, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2478, "model": "csyllabusapi.courseuniversity", "fields": {"course": 747, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 747, "model": "csyllabusapi.course", "fields": {"name": "Computers, Ethics, and Public Policy", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Primarily for majors entering computer-related fields. Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106B or X. To take this course, students need permission of instructor and may need to complete an assignment due at the first day of class."}}, {"pk": 2479, "model": "csyllabusapi.courseprogram", "fields": {"course": 748, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2479, "model": "csyllabusapi.courseuniversity", "fields": {"course": 748, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 748, "model": "csyllabusapi.course", "fields": {"name": "Computers, Ethics, and Public Policy (WIM)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Writing-intensive version of CS181. Satisfies the WIM requirement for Computer Science, Engineering Physics, STS, and Math/Comp Sci undergraduates. To take this course, students need permission of instructor and may need to complete an assignment due at the first day of class."}}, {"pk": 2480, "model": "csyllabusapi.courseprogram", "fields": {"course": 749, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2480, "model": "csyllabusapi.courseuniversity", "fields": {"course": 749, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 749, "model": "csyllabusapi.course", "fields": {"name": "Effective Leadership in High-Tech", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "You will undoubtedly leave Stanford with the technical skills to excel in your first few jobs. But non-technical skills are just as critical to making a difference. This seminar is taught by two industry veterans in engineering leadership and product management. In a small group setting, we will explore how you can be a great individual contributor (communicating with clarity, getting traction for your ideas, resolving conflict, and delivering your best work) and how you can transition into leadership roles (finding leadership opportunities, creating a great team culture, hiring and onboarding new team members). We will end by turning back to your career (picking your first job and negotiating your offer, managing your career changes, building a great network, and succeeding with mentors). Prerequisites: Preference given to seniors and co-terms in Computer Science and related majors. Enrollment limited and application required for admittance."}}, {"pk": 2481, "model": "csyllabusapi.courseprogram", "fields": {"course": 750, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2481, "model": "csyllabusapi.courseuniversity", "fields": {"course": 750, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 750, "model": "csyllabusapi.course", "fields": {"name": "Software Design Studio", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will teach the art of software design: how to decompose large complex systems into classes that can be implemented and maintained easily. Topics include information hiding, thick classes, API design, managing complexity, and how to write in-code documentation. The class will involve significant system software implementation and will use an iterative approach consisting of implementation, review, and revision. The course will be taught in a studio format with in-class discussions and code reviews in addition to lectures. Prerequisites: CS 140. Application and consent of instructor required. Apply at: https://web.stanford.edu/class/cs190"}}, {"pk": 2482, "model": "csyllabusapi.courseprogram", "fields": {"course": 751, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2482, "model": "csyllabusapi.courseuniversity", "fields": {"course": 751, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 751, "model": "csyllabusapi.course", "fields": {"name": "Senior Project", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units."}}, {"pk": 2483, "model": "csyllabusapi.courseprogram", "fields": {"course": 752, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2483, "model": "csyllabusapi.courseuniversity", "fields": {"course": 752, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 752, "model": "csyllabusapi.course", "fields": {"name": "Writing Intensive Senior Project (WIM)", "ects": 4, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units."}}, {"pk": 2484, "model": "csyllabusapi.courseprogram", "fields": {"course": 753, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2484, "model": "csyllabusapi.courseuniversity", "fields": {"course": 753, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 753, "model": "csyllabusapi.course", "fields": {"name": "Programming Service Project", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Restricted to Computer Science students. Appropriate academic credit (without financial support) is given for volunteer computer programming work of public benefit and educational value."}}, {"pk": 2485, "model": "csyllabusapi.courseprogram", "fields": {"course": 754, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2485, "model": "csyllabusapi.courseuniversity", "fields": {"course": 754, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 754, "model": "csyllabusapi.course", "fields": {"name": "Android Programming", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to building applications for Android platform. Examines key concepts of Android programming: tool chain, application life-cycle, views, controls, intents, designing mobile UIs, networking, threading, and more. Features weekly lectures and a series of small programming projects. Phone not required, but a phone makes the projects more engaging. Prerequisites: 106B or Java experience at 106B level. Enrollment limited and application required."}}, {"pk": 2486, "model": "csyllabusapi.courseprogram", "fields": {"course": 755, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2486, "model": "csyllabusapi.courseuniversity", "fields": {"course": 755, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 755, "model": "csyllabusapi.course", "fields": {"name": "Client-Side Internet Technologies", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Client-side technologies used to create web sites such as Google maps or Gmail. Includes HTML5, CSS, JavaScript, the Document Object Model (DOM), and Ajax. Prerequisite: programming experience at the level of CS106A."}}, {"pk": 2487, "model": "csyllabusapi.courseprogram", "fields": {"course": 756, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2487, "model": "csyllabusapi.courseuniversity", "fields": {"course": 756, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 756, "model": "csyllabusapi.course", "fields": {"name": "iOS Application Development", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Tools and APIs required to build applications for the iPhone and iPad platforms using the iOS SDK. User interface design for mobile devices and unique user interactions using multi-touch technologies. Object-oriented design using model-view-controller paradigm, memory management, Swift programming language. Other topics include: object-oriented database API, animation, multi-threading, networking and performance considerations. nPrerequisites: C language and object-oriented programming experience exceeding 106B or X level. Previous completion of any one of the following is required: CS 107<https://explorecourses.stanford.edu/search?view=catalog&filter-coursestatus-Active=on&page=0&q=CS107>, 108 (preferred) or 110. Recommended: UNIX, graphics, databases."}}, {"pk": 2488, "model": "csyllabusapi.courseprogram", "fields": {"course": 757, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2488, "model": "csyllabusapi.courseuniversity", "fields": {"course": 757, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 757, "model": "csyllabusapi.course", "fields": {"name": "Software Project", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Design, specification, coding, and testing of a significant team programming project under faculty supervision. Documentation includes a detailed proposal. Public demonstration of the project at the end of the quarter. Preference given to seniors. May be repeat for credit. Prerequisites: CS 110 and CS 161."}}, {"pk": 2489, "model": "csyllabusapi.courseprogram", "fields": {"course": 758, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2489, "model": "csyllabusapi.courseuniversity", "fields": {"course": 758, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 758, "model": "csyllabusapi.course", "fields": {"name": "User Interface Design Project", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Advanced methods for designing, prototyping, and evaluating user interfaces to computing applications. Novel interface technology, advanced interface design methods, and prototyping tools. Substantial, quarter-long course project that will be presented in a public presentation. Prerequisites: CS 147, or permission of instructor."}}, {"pk": 2490, "model": "csyllabusapi.courseprogram", "fields": {"course": 759, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2490, "model": "csyllabusapi.courseuniversity", "fields": {"course": 759, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 759, "model": "csyllabusapi.course", "fields": {"name": "Software Project (WIM)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Restricted to Computer Science and Electrical Engineering undergraduates.  Writing-intensive version of CS194. Preference given to seniors."}}, {"pk": 2491, "model": "csyllabusapi.courseprogram", "fields": {"course": 760, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2491, "model": "csyllabusapi.courseuniversity", "fields": {"course": 760, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 760, "model": "csyllabusapi.course", "fields": {"name": "Computer Consulting", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Focus is on Macintosh and Windows operating system maintenance and troubleshooting through hardware and software foundation and concepts. Topics include operating systems, networking, security, troubleshooting methodology with emphasis on Stanford's computing environment. Not a programming course. Prerequisite: 1C or equivalent."}}, {"pk": 2492, "model": "csyllabusapi.courseprogram", "fields": {"course": 761, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2492, "model": "csyllabusapi.courseuniversity", "fields": {"course": 761, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 761, "model": "csyllabusapi.course", "fields": {"name": "Teaching Computer Science", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Students lead a discussion section of 106A while learning how to teach a programming language at the introductory level. Focus is on teaching skills, techniques, and course specifics. Application and interview required; see http://cs198.stanford.edu."}}, {"pk": 2493, "model": "csyllabusapi.courseprogram", "fields": {"course": 762, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2493, "model": "csyllabusapi.courseuniversity", "fields": {"course": 762, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 762, "model": "csyllabusapi.course", "fields": {"name": "Additional Topics in Teaching Computer Science", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Students build on the teaching skills developed in CS198. Focus is on techniques used to teach topics covered in CS106B. Prerequisite: successful completion of CS198."}}, {"pk": 2494, "model": "csyllabusapi.courseprogram", "fields": {"course": 763, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2494, "model": "csyllabusapi.courseuniversity", "fields": {"course": 763, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 763, "model": "csyllabusapi.course", "fields": {"name": "Independent Work", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P."}}, {"pk": 2495, "model": "csyllabusapi.courseprogram", "fields": {"course": 764, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2495, "model": "csyllabusapi.courseuniversity", "fields": {"course": 764, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 764, "model": "csyllabusapi.course", "fields": {"name": "Independent Work", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "(Staff)"}}, {"pk": 2496, "model": "csyllabusapi.courseprogram", "fields": {"course": 765, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2496, "model": "csyllabusapi.courseuniversity", "fields": {"course": 765, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 765, "model": "csyllabusapi.course", "fields": {"name": "Law for Computer Science Professionals", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Intellectual property law as it relates to computer science including copyright registration, patents, and trade secrets; contract issues such as non-disclosure/non-compete agreements, license agreements, and works-made-for-hire; dispute resolution; and principles of business formation and ownership. Emphasis is on topics of current interest such as open source and the free software movement, peer-to-peer sharing, encryption, data mining, and spam."}}, {"pk": 2497, "model": "csyllabusapi.courseprogram", "fields": {"course": 766, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2497, "model": "csyllabusapi.courseuniversity", "fields": {"course": 766, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 766, "model": "csyllabusapi.course", "fields": {"name": "Legal Informatics", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Legal informatics based on representation of regulations in computable form. Encoding regulations facilitate creation of legal information systems with significant practical value. Convergence of technological trends, growth of the Internet, advent of semantic web technology, and progress in computational logic make computational law prospects better. Topics: current state of computational law, prospects and problems, philosophical and legal implications. This course is *Cross* listed with LAW 4019. Prerequisite: basic concepts of programming."}}, {"pk": 2498, "model": "csyllabusapi.courseprogram", "fields": {"course": 767, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2498, "model": "csyllabusapi.courseuniversity", "fields": {"course": 767, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 767, "model": "csyllabusapi.course", "fields": {"name": "Mathematical Methods for Robotics, Vision, and Graphics", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Continuous mathematics background necessary for research in robotics, vision, and graphics. Possible topics: linear algebra; the conjugate gradient method; ordinary and partial differential equations; vector and tensor calculus. Prerequisites: 106B or X; MATH 51; or equivalents."}}, {"pk": 2499, "model": "csyllabusapi.courseprogram", "fields": {"course": 768, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2499, "model": "csyllabusapi.courseuniversity", "fields": {"course": 768, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 768, "model": "csyllabusapi.course", "fields": {"name": "Exploring Computational Journalism (COMM 281)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will explore the evolving field of computational journalism. Students will research and discuss the state of the field, and do projects in areas such as understanding the media ecosystem, stimulating media creation, and assessing media impact. Admission by application; please email James Hamilton at jayth@stanford.edu to request application."}}, {"pk": 2500, "model": "csyllabusapi.courseprogram", "fields": {"course": 769, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2500, "model": "csyllabusapi.courseuniversity", "fields": {"course": 769, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 769, "model": "csyllabusapi.course", "fields": {"name": "Great Ideas in Computer Science", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Great Ideas in Computer Science Covers the intellectual tradition of computer science emphasizing ideas that reflect the most important milestones in the history of the discipline. Topics include programming and problem solving; implementing computation in hardware; algorithmic efficiency; the theoretical limits of computation; cryptography and security; computer networks; machine learning; and the philosophy behind artificial intelligence.  Readings will include classic papers along with additional explanatory material.  Enrollment limited to students in the Master's program in Computer Science Education."}}, {"pk": 2501, "model": "csyllabusapi.courseprogram", "fields": {"course": 770, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2501, "model": "csyllabusapi.courseuniversity", "fields": {"course": 770, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 770, "model": "csyllabusapi.course", "fields": {"name": "Software Project Experience with Corporate Partners", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Two-quarter project course. Focus is on real-world software development. Corporate partners seed projects with loosely defined challenges from their R&D labs; students innovate to build their own compelling software solutions. Student teams are treated as start-up companies with a budget and a technical advisory board comprised of instructional staff and corporate liaisons. Teams will typically travel to the corporate headquarters of their collaborating partner, meaning some teams will travel internationally. Open loft classroom format such as found in Silicon Valley software companies. Exposure to: current practices in software engineering; techniques for stimulating innovation; significant development experience with creative freedoms; working in groups; real-world software engineering challenges; public presentation of technical work; creating written descriptions of technical work. Prerequisites: CS 109 and 110."}}, {"pk": 2502, "model": "csyllabusapi.courseprogram", "fields": {"course": 771, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2502, "model": "csyllabusapi.courseuniversity", "fields": {"course": 771, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 771, "model": "csyllabusapi.course", "fields": {"name": "Software Project Experience with Corporate Partners", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Continuation of CS210A. Focus is on real-world software development. Corporate partners seed projects with loosely defined challenges from their R&D labs; students innovate to build their own compelling software solutions. Student teams are treated as start-up companies with a budget and a technical advisory board comprised of the instructional staff and corporate liaisons. Teams will typically travel to the corporate headquarters of their collaborating partner, meaning some teams will travel internationally. Open loft classroom format such as found in Silicon Valley software companies. Exposure to: current practices in software engineering; techniques for stimulating innovation; significant development experience with creative freedoms; working in groups; real world software engineering challenges; public presentation of technical work; creating written descriptions of technical work. Prerequisites: CS 210A"}}, {"pk": 2503, "model": "csyllabusapi.courseprogram", "fields": {"course": 772, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2503, "model": "csyllabusapi.courseuniversity", "fields": {"course": 772, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 772, "model": "csyllabusapi.course", "fields": {"name": "Creating Great VR: From Ideation to Monetization", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Covering everything from VR fundamentals to futurecasting to launch management, this course will expose you to best practices and guidance from VR leaders that helps positions you to build great VR experiences."}}, {"pk": 2504, "model": "csyllabusapi.courseprogram", "fields": {"course": 773, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2504, "model": "csyllabusapi.courseuniversity", "fields": {"course": 773, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 773, "model": "csyllabusapi.course", "fields": {"name": "Artificial Intelligence: Principles and Techniques", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience)."}}, {"pk": 2505, "model": "csyllabusapi.courseprogram", "fields": {"course": 774, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2505, "model": "csyllabusapi.courseuniversity", "fields": {"course": 774, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 774, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Robotics (ME 320)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Robotics foundations in modeling, design, planning, and control. Class covers relevant results from geometry, kinematics, statics, dynamics, motion planning, and control, providing the basic methodologies and tools in robotics research and applications. Concepts and models are illustrated through physical robot platforms, interactive robot simulations, and video segments relevant to historical research developments or to emerging application areas in the field. Recommended: matrix algebra."}}, {"pk": 2506, "model": "csyllabusapi.courseprogram", "fields": {"course": 775, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2506, "model": "csyllabusapi.courseuniversity", "fields": {"course": 775, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 775, "model": "csyllabusapi.course", "fields": {"name": "Natural Language Processing with Deep Learning (LINGUIST 284)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Methods for processing human language information and the underlying computational properties of natural languages. Focus on deep learning approaches: understanding, implementing, training, debugging, visualizing, and extending neural network models for a variety of language understanding tasks. Exploration of natural language tasks ranging from simple word level and syntactic processing to coreference, question answering, and machine translation. Examination of representative papers and systems and completion of a final project applying a complex neural network model to a large-scale NLP problem. Prerequisites: calculus and linear algebra; CS124 or CS121/221."}}, {"pk": 2507, "model": "csyllabusapi.courseprogram", "fields": {"course": 776, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2507, "model": "csyllabusapi.courseuniversity", "fields": {"course": 776, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 776, "model": "csyllabusapi.course", "fields": {"name": "Natural Language Understanding (LINGUIST 188, LINGUIST 288)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Project-oriented class focused on developing systems and algorithms for robust machine understanding of human language.  Draws on theoretical concepts from linguistics, natural language processing, and machine learning.  Topics include lexical semantics, distributed representations of meaning, relation extraction, semantic parsing, sentiment analysis, and dialogue agents, with special lectures on developing projects, presenting research results, and making connections with industry. Prerequisites: one of LINGUIST 180, CS 124, CS 224N, CS224S, or CS221; and logical/semantics such as LINGUIST 130A or B, CS 157, or PHIL150"}}, {"pk": 2508, "model": "csyllabusapi.courseprogram", "fields": {"course": 777, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2508, "model": "csyllabusapi.courseuniversity", "fields": {"course": 777, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 777, "model": "csyllabusapi.course", "fields": {"name": "Analysis of Networks", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Networks are a fundamental tool for modeling complex social, technological, and biological systems. Coupled with emergence of online social networks and large-scale data availability in biological sciences, this course focuses on the analysis of massive networks which provide many computational, algorithmic, and modeling challenges. This course develops computational tools that reveal how the social, technological, and natural worlds are connected, and how the study of networks sheds light on these connections. nTopics include: how information spreads through society; robustness and fragility of food webs and financial markets; algorithms for the World Wide Web; friend prediction in online social networks; identification of functional modules in biological networks; disease outbreak detection."}}, {"pk": 2509, "model": "csyllabusapi.courseprogram", "fields": {"course": 778, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2509, "model": "csyllabusapi.courseuniversity", "fields": {"course": 778, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 778, "model": "csyllabusapi.course", "fields": {"name": "Experimental Robotics", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Hands-on laboratory course experience in robotic manipulation. Topics include robot kinematics, dynamics, control, compliance, sensor-based collision avoidance, and human-robot interfaces. Second half of class is devoted to final projects using various robotic platforms to build and demonstrate new robot task capabilities. Previous projects include the development of autonomous robot behaviors of drawing, painting, playing air hocket, yoyo, basketball, ping-pong or xylophone. Prerequisites: 223A or equivalent."}}, {"pk": 2510, "model": "csyllabusapi.courseprogram", "fields": {"course": 779, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2510, "model": "csyllabusapi.courseuniversity", "fields": {"course": 779, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 779, "model": "csyllabusapi.course", "fields": {"name": "General Game Playing", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "A general game playing system accepts a formal description of a game to play it without human intervention or algorithms designed for specific games. Hands-on introduction to these systems and artificial intelligence techniques such as knowledge representation, reasoning, learning, and rational behavior. Students create GGP systems to compete with each other and in external competitions. Prerequisite: programming experience. Recommended: 103 or equivalent."}}, {"pk": 2511, "model": "csyllabusapi.courseprogram", "fields": {"course": 780, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2511, "model": "csyllabusapi.courseuniversity", "fields": {"course": 780, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 780, "model": "csyllabusapi.course", "fields": {"name": "Probabilistic Graphical Models: Principles and Techniques", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis."}}, {"pk": 2512, "model": "csyllabusapi.courseprogram", "fields": {"course": 781, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2512, "model": "csyllabusapi.courseuniversity", "fields": {"course": 781, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 781, "model": "csyllabusapi.course", "fields": {"name": "Machine Learning (STATS 229)", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics."}}, {"pk": 2513, "model": "csyllabusapi.courseprogram", "fields": {"course": 782, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2513, "model": "csyllabusapi.courseuniversity", "fields": {"course": 782, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 782, "model": "csyllabusapi.course", "fields": {"name": "Deep Learning", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Deep Learning is one of the most highly sought after skills in AI. We will help you become good at Deep Learning. In this course, you will learn the foundations of Deep Learning, understand how to build neural networks, and learn how to lead successful machine learning projects. You will learn about Convolutional networks, RNNs, LSTM, Adam, Dropout, BatchNorm, Xavier/He initialization, and more. You will work on case studies from healthcare, autonomous driving, sign language reading, music generation, and natural language processing. You will master not only the theory, but also see how it is applied in industry. You will practice all these ideas in Python and in TensorFlow, which we will teach. AI is transforming multiple industries. After this course, you will likely find creative ways to apply it to your work. This class is taught in the flipped-classroom format. You will watch videos and complete in-depth programming assignments and online quizzes at home, then come in to class for advanced discussions and work on projects. This class will culminate in an open-ended final project, which the teaching team will help you on. Prerequisites: Familiarity with programming in Python and Linear Algebra (matrix / vector multiplications). CS 229 may be taken concurrently."}}, {"pk": 2514, "model": "csyllabusapi.courseprogram", "fields": {"course": 783, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2514, "model": "csyllabusapi.courseuniversity", "fields": {"course": 783, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 783, "model": "csyllabusapi.course", "fields": {"name": "Computer Vision: From 3D Reconstruction to Recognition", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "(Formerly 223B) An introduction to the concepts and applications in computer vision. Topics include: cameras and projection models, low-level image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, as well as high-level vision tasks such as object recognition, scene recognition, face detection and human motion categorization. Prerequisites: linear algebra, basic probability and statistics."}}, {"pk": 2515, "model": "csyllabusapi.courseprogram", "fields": {"course": 784, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2515, "model": "csyllabusapi.courseuniversity", "fields": {"course": 784, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 784, "model": "csyllabusapi.course", "fields": {"name": "Convolutional Neural Networks for Visual Recognition", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra."}}, {"pk": 2516, "model": "csyllabusapi.courseprogram", "fields": {"course": 785, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2516, "model": "csyllabusapi.courseuniversity", "fields": {"course": 785, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 785, "model": "csyllabusapi.course", "fields": {"name": "Digital Image Processing (EE 368)", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Image sampling and quantization color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, noise reduction and restoration, feature extraction and recognition tasks, image registration. Emphasis is on the general principles of image processing. Students learn to apply material by implementing and investigating image processing algorithms in Matlab and optionally on Android mobile devices. Term project. Recommended: EE261, EE278."}}, {"pk": 2517, "model": "csyllabusapi.courseprogram", "fields": {"course": 786, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2517, "model": "csyllabusapi.courseuniversity", "fields": {"course": 786, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 786, "model": "csyllabusapi.course", "fields": {"name": "Geometric and Topological Data Analysis (CME 251)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Mathematical computational tools for the analysis of data with geometric content, such images, videos, 3D scans, GPS traces -- as well as for other data embedded into geometric spaces. Global and local geometry descriptors allowing for various kinds of invariances. The rudiments of computational topology and persistent homology on sampled spaces. Clustering and other unsupervised techniques. Spectral methods for geometric data analysis. Non-linear dimensionality reduction. Alignment, matching, and map computation between geometric data sets. Function spaces and functional maps.Networks of data sets and joint analysis for segmentation and labeling. The emergence of abstractions or concepts from data. Prerequisites: discrete algorithms at the level of 161; linear algebra at the level of CME103."}}, {"pk": 2518, "model": "csyllabusapi.courseprogram", "fields": {"course": 787, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2518, "model": "csyllabusapi.courseuniversity", "fields": {"course": 787, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 787, "model": "csyllabusapi.course", "fields": {"name": "Reinforcement Learning", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability."}}, {"pk": 2519, "model": "csyllabusapi.courseprogram", "fields": {"course": 788, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2519, "model": "csyllabusapi.courseuniversity", "fields": {"course": 788, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 788, "model": "csyllabusapi.course", "fields": {"name": "Decision Making under Uncertainty (AA 228)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course is designed to increase awareness and appreciation for why uncertainty matters, particularly for aerospace applications. Introduces decision making under uncertainty from a computational perspective and provides an overview of the necessary tools for building autonomous and decision-support systems. Following an introduction to probabilistic models and decision theory, the course will cover computational methods for solving decision problems with stochastic dynamics, model uncertainty, and imperfect state information. Topics include: Bayesian networks, influence diagrams, dynamic programming, reinforcement learning, and partially observable Markov decision processes. Applications cover: air traffic control, aviation surveillance systems, autonomous vehicles, and robotic planetary exploration. Prerequisites: basic probability and fluency in a high-level programming language."}}, {"pk": 2520, "model": "csyllabusapi.courseprogram", "fields": {"course": 789, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2520, "model": "csyllabusapi.courseuniversity", "fields": {"course": 789, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 789, "model": "csyllabusapi.course", "fields": {"name": "Advanced Topics in Sequential Decision Making (AA 229)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Survey of recent research advances in intelligent decision making for dynamic environments from a computational perspective. Efficient algorithms for single and multiagent planning in situations where a model of the environment may or may not be known. Partially observable Markov decision processes, approximate dynamic programming, and reinforcement learning. New approaches for overcoming challenges in generalization from experience, exploration of the environment, and model representation so that these methods can scale to real problems in a variety of domains including aerospace, air traffic control, and robotics. Students are expected to produce an original research paper on a relevant topic. Prerequisites: AA 228/CS 238 or CS 221."}}, {"pk": 2521, "model": "csyllabusapi.courseprogram", "fields": {"course": 790, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2521, "model": "csyllabusapi.courseuniversity", "fields": {"course": 790, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 790, "model": "csyllabusapi.course", "fields": {"name": "Advanced Topics in Operating Systems", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Recent research. Classic and new papers. Topics: virtual memory management, synchronization and communication, file systems, protection and security, operating system extension techniques, fault tolerance, and the history and experience of systems programming. Prerequisite: 140 or equivalent."}}, {"pk": 2522, "model": "csyllabusapi.courseprogram", "fields": {"course": 791, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2522, "model": "csyllabusapi.courseuniversity", "fields": {"course": 791, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 791, "model": "csyllabusapi.course", "fields": {"name": "Embedded Systems Workshop (EE 285)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Project-centric building hardware and software for embedded computing systems. Students work on an existing project of their own or join one of these projects. Syllabus topics will be determined by the needs of the enrolled students and projects. Examples of topics include: interrupts and concurrent programming, deterministic timing and synchronization, state-based programming models, filters, frequency response, and high-frequency signals, low power operation, system and PCB design, security, and networked communication. Prerequisite: CS107 (or equivalent)."}}, {"pk": 2523, "model": "csyllabusapi.courseprogram", "fields": {"course": 792, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2523, "model": "csyllabusapi.courseuniversity", "fields": {"course": 792, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 792, "model": "csyllabusapi.course", "fields": {"name": "Programming Languages", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Central concepts in modern programming languages, impact on software development, language design trade-offs, and implementation considerations. Functional, imperative, and object-oriented paradigms. Formal semantic methods and program analysis. Modern type systems, higher order functions and closures, exceptions and continuations. Modularity, object-oriented languages, and concurrency. Runtime support for language features, interoperability, and security issues. Prerequisite: 107, or experience with Lisp, C, and an object-oriented language."}}, {"pk": 2524, "model": "csyllabusapi.courseprogram", "fields": {"course": 793, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2524, "model": "csyllabusapi.courseuniversity", "fields": {"course": 793, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 793, "model": "csyllabusapi.course", "fields": {"name": "Program Analysis and Optimizations", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Program analysis techniques used in compilers and software development tools to improve productivity, reliability, and security. The methodology of applying mathematical abstractions such as graphs, fixpoint computations, binary decision diagrams in writing complex software, using compilers as an example. Topics include data flow analysis, instruction scheduling, register allocation, parallelism, data locality, interprocedural analysis, and garbage collection. Prerequisites: 103 or 103B, and 107."}}, {"pk": 2525, "model": "csyllabusapi.courseprogram", "fields": {"course": 794, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2525, "model": "csyllabusapi.courseuniversity", "fields": {"course": 794, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 794, "model": "csyllabusapi.course", "fields": {"name": "Advanced Topics in Networking", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent."}}, {"pk": 2526, "model": "csyllabusapi.courseprogram", "fields": {"course": 795, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2526, "model": "csyllabusapi.courseuniversity", "fields": {"course": 795, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 795, "model": "csyllabusapi.course", "fields": {"name": "Distributed Systems", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Distributed operating systems and applications issues, emphasizing high-level protocols and distributed state sharing as the key technologies. Topics: distributed shared memory, object-oriented distributed system design, distributed directory services, atomic transactions and time synchronization, application-sufficient consistency, file access, process scheduling, process migration, and storage/communication abstractions on distribution, scale, robustness in the face of failure, and security.  Prerequisites: CS 144."}}, {"pk": 2527, "model": "csyllabusapi.courseprogram", "fields": {"course": 796, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2527, "model": "csyllabusapi.courseuniversity", "fields": {"course": 796, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 796, "model": "csyllabusapi.course", "fields": {"name": "Mining Massive Data Sets", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Availability of massive datasets is revolutionizing science and industry. This course discusses data mining and machine learning algorithms for analyzing very large amounts of data. The focus is on algorithms and systems for mining big data. nTopics include: Big data systems (Hadoop, Spark, Hive); Link Analysis (PageRank, spam detection, hubs-and-authorities); Similarity search (locality-sensitive hashing, shingling, minhashing, random hyperplanes); Stream data processing; Analysis of social-network graphs; Association rules; Dimensionality reduction (UV, SVD, and CUR decompositions); Algorithms for very-large-scale mining (clustering, nearest-neighbor search); Large-scale machine learning (gradient descent, support-vector machines, classification, and regression); Submodular function optimization; Computational advertising. Prerequisites: At least one of CS107 or CS145."}}, {"pk": 2528, "model": "csyllabusapi.courseprogram", "fields": {"course": 797, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2528, "model": "csyllabusapi.courseuniversity", "fields": {"course": 797, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 797, "model": "csyllabusapi.course", "fields": {"name": "Mining Massive Data Sets Hadoop Lab", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Supplement to CS 246 providing additional material on Hadoop. Students will learn how to implement data mining algorithms using Hadoop, how to implement and debug complex MapReduce jobs in Hadoop, and how to use some of the tools in the Hadoop ecosystem for data mining and machine learning. Topics: Hadoop, MapReduce, HDFS, combiners, secondary sort, distributed cache, SQL on Hadoop, Hive, Cloudera ML/Oryx, Mahout, Hadoop streaming, implementing Hadoop jobs, debugging Hadoop jobs, TF-IDF, Pig, Sqoop, Oozie, HBase, Impala. Prerequisite: CS 107 or equivalent."}}, {"pk": 2529, "model": "csyllabusapi.courseprogram", "fields": {"course": 798, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2529, "model": "csyllabusapi.courseuniversity", "fields": {"course": 798, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 798, "model": "csyllabusapi.course", "fields": {"name": "Human-Computer Interaction Design Studio", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Project-based focus on interaction design process, especially early-stage design and rapid prototyping. Methods used in interaction design including needs analysis, user observation, sketching, concept generation, scenario building, and evaluation. Prerequisites: 147 or equivalent background in design thinking; 106B or equivalent background in programming. Recommended: CS 142 or equivalent background in web programming."}}, {"pk": 2530, "model": "csyllabusapi.courseprogram", "fields": {"course": 799, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2530, "model": "csyllabusapi.courseuniversity", "fields": {"course": 799, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 799, "model": "csyllabusapi.course", "fields": {"name": "Interactive Computer Graphics", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This is the second course in the computer graphics sequence, and as such it assumes a strong familiarity with rendering and image creation. The course has a strong focus on computational geometry, animation, and simulation. Topics include splines, implicit surfaces, geometric modeling, collision detection, animation curves, particle systems and crowds, character animation, articulation, skinning, motion capture and editing, rigid and deformable bodies, and fluid simulation. As a final project, students implement an interactive video game utilizing various concepts covered in the class. Games may be designed on mobile devices, in a client/server/browser environment, or on a standard personal computer. Prerequisite: CS148."}}, {"pk": 2531, "model": "csyllabusapi.courseprogram", "fields": {"course": 800, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2531, "model": "csyllabusapi.courseuniversity", "fields": {"course": 800, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 800, "model": "csyllabusapi.course", "fields": {"name": "Algebraic Error Correcting Codes (EE 387)", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to the theory of error correcting codes, emphasizing algebraic constructions, and diverse applications throughout computer science and engineering. Topics include basic bounds on error correcting codes; Reed-Solomon and Reed-Muller codes; list-decoding, list-recovery and locality. Applications may include communication, storage, complexity theory, pseudorandomness, cryptography, streaming algorithms, group testing, and compressed sensing. Prerequisites: Linear algebra, basic probability (at the level of, say, CS109, CME106 or EE178) and \"mathematical maturity\" (students will be asked to write proofs).  Familiarity with finite fields will be helpful but not required."}}, {"pk": 2532, "model": "csyllabusapi.courseprogram", "fields": {"course": 801, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2532, "model": "csyllabusapi.courseuniversity", "fields": {"course": 801, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 801, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Cryptography", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For advanced undergraduates and graduate students. Theory and practice of cryptographic techniques used in computer security. Topics: encryption (symmetric and public key), digital signatures, data integrity, authentication, key management, PKI, zero-knowledge protocols, and real-world applications. Prerequisite: basic probability theory."}}, {"pk": 2533, "model": "csyllabusapi.courseprogram", "fields": {"course": 802, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2533, "model": "csyllabusapi.courseuniversity", "fields": {"course": 802, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 802, "model": "csyllabusapi.course", "fields": {"name": "Logic and Artificial Intelligence (PHIL 356C)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This is a course at the intersection of philosophical logic and artificial intelligence. After reviewing recent work in AI that has leveraged ideas from logic, we will slow down and study in more detail various components of high-level intelligence and the tools that have been designed to capture those components. Specific areas will include: reasoning about belief and action, causality and counterfactuals, legal and normative reasoning, natural language inference, and Turing-complete logical formalisms including (probabilistic) logic programming and lambda calculus. Our main concern will be understanding the logical tools themselves, including their formal properties and how they relate to other tools such as probability and statistics. At the end, students should expect to have learned a lot more about logic, and also to have a sense for how logic has been and can be used in AI applications. Prerequisites: A background in logic, at least at the level of Phil 151, will be expected. In case a student is willing to put in the extra work to catch up, it may be possible to take the course with background equivalent to Phil 150 or CS 157. A background in AI, at the level of CS 221, would also be very helpful and will at times be expected. 2 unit option only for PhD students past the second year. Course website: http://web.stanford.edu/class/cs257/"}}, {"pk": 2534, "model": "csyllabusapi.courseprogram", "fields": {"course": 803, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2534, "model": "csyllabusapi.courseuniversity", "fields": {"course": 803, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 803, "model": "csyllabusapi.course", "fields": {"name": "Optimization and Algorithmic Paradigms", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Algorithms for network optimization: max-flow, min-cost flow, matching, assignment, and min-cut problems. Introduction to linear programming. Use of LP duality for design and analysis of algorithms. Approximation algorithms for NP-complete problems such as Steiner Trees, Traveling Salesman, and scheduling problems. Randomized algorithms. Introduction to online algorithms. Prerequisite: 161 or equivalent."}}, {"pk": 2535, "model": "csyllabusapi.courseprogram", "fields": {"course": 804, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2535, "model": "csyllabusapi.courseuniversity", "fields": {"course": 804, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 804, "model": "csyllabusapi.course", "fields": {"name": "Randomized Algorithms and Probabilistic Analysis (CME 309)", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent."}}, {"pk": 2536, "model": "csyllabusapi.courseprogram", "fields": {"course": 805, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2536, "model": "csyllabusapi.courseuniversity", "fields": {"course": 805, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 805, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Optimization Theory (MS&E 213)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction of core algorithmic techniques and proof strategies that underlie the best known provable guarantees for minimizing high dimensional convex functions. Focus on broad canonical optimization problems and survey results for efficiently solving them, ultimately providing the theoretical foundation for further study in optimization. In particular, focus will be on first-order methods for both smooth and non-smooth convex function minimization as well as methods for structured convex function minimization, discussing algorithms such as gradient descent, accelerated gradient descent, mirror descent, Newton's method, interior point methods, and more. Prerequisite: multivariable calculus and linear algebra."}}, {"pk": 2537, "model": "csyllabusapi.courseprogram", "fields": {"course": 806, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2537, "model": "csyllabusapi.courseuniversity", "fields": {"course": 806, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 806, "model": "csyllabusapi.course", "fields": {"name": "Modeling Biomedical Systems: Ontology, Terminology, Problem Solving (BIOMEDIN 210)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Methods for modeling biomedical systems and for building model-based software systems. Emphasis is on intelligent systems for decision support and Semantic Web applications. Topics: knowledge representation, controlled terminologies, ontologies, reusable problem solvers, and knowledge acquisition. Students learn about current trends in the development of advanced biomedical software systems and acquire hands-on experience with several systems and tools. Prerequisites: CS106A, basic familiarity with biology."}}, {"pk": 2538, "model": "csyllabusapi.courseprogram", "fields": {"course": 807, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2538, "model": "csyllabusapi.courseuniversity", "fields": {"course": 807, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 807, "model": "csyllabusapi.course", "fields": {"name": "Introduction to Biomedical Informatics Research Methodology (BIOE 212, BIOMEDIN 212, GENE 212)", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Capstone Biomedical Informatics (BMI) experience. Hands-on software building. Student teams conceive, design, specify, implement, evaluate, and report on a software project in the domain of biomedicine. Creating written proposals, peer review, providing status reports, and preparing final reports. Issues related to research reproducibility. Guest lectures from professional biomedical informatics systems builders on issues related to the process of project management. Software engineering basics. Because the team projects start in the first week of class, attendance that week is strongly recommended. Prerequisites: BIOMEDIN 210 or 214 or 215 or 217 or 260. Preference to BMI graduate students. Consent of instructor required."}}, {"pk": 2539, "model": "csyllabusapi.courseprogram", "fields": {"course": 808, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2539, "model": "csyllabusapi.courseuniversity", "fields": {"course": 808, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 808, "model": "csyllabusapi.course", "fields": {"name": "The Human Genome Source Code (BIOMEDIN 273A, DBIO 273A)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "A computational introduction to the most amazing programming language on the planet: your genome. Topics include genome sequencing (assembling source code from code fragments); the human genome functional landscape: variable assignments (genes), control-flow logic (gene regulation) and run-time stack (epigenomics); human disease and personalized genomics (as a hunt for bugs in the human code); genome editing (code injection) to cure the incurable; and the source code behind amazing animal adaptations. Algorithmic approaches will introduce ideas from computational genomics, machine learning and natural language processing. Course includes primers on molecular biology, and text processing languages. No prerequisites."}}, {"pk": 2540, "model": "csyllabusapi.courseprogram", "fields": {"course": 809, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2540, "model": "csyllabusapi.courseuniversity", "fields": {"course": 809, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 809, "model": "csyllabusapi.course", "fields": {"name": "Deep Learning in Genomics and Biomedicine (BIODS 237, BIOMEDIN 273B, GENE 236)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary."}}, {"pk": 2541, "model": "csyllabusapi.courseprogram", "fields": {"course": 810, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2541, "model": "csyllabusapi.courseuniversity", "fields": {"course": 810, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 810, "model": "csyllabusapi.course", "fields": {"name": "Representations and Algorithms for Computational Molecular Biology (BIOE 214, BIOMEDIN 214, GENE 214)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Topics: introduction to bioinformatics and computational biology, algorithms for alignment of biological sequences and structures, computing with strings, phylogenetic tree construction, hidden Markov models, basic structural computations on proteins, protein structure prediction, protein threading techniques, homology modeling, molecular dynamics and energy minimization, statistical analysis of 3D biological data, integration of data sources, knowledge representation and controlled terminologies for molecular biology, microarray analysis, machine learning (clustering and classification), and natural language text processing. Prerequisite: CS 106B; recommended: CS161; consent of instructor for 3 units."}}, {"pk": 2542, "model": "csyllabusapi.courseprogram", "fields": {"course": 811, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2542, "model": "csyllabusapi.courseuniversity", "fields": {"course": 811, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 811, "model": "csyllabusapi.course", "fields": {"name": "Translational Bioinformatics (BIOE 217, BIOMEDIN 217, GENE 217)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Computational methods for the translation of biomedical data into diagnostic, prognostic, and therapeutic applications in medicine. Topics: multi-scale omics data generation and analysis, utility and limitations of public biomedical resources, machine learning and data mining, issues and opportunities in drug discovery, and mobile/digital health solutions. Case studies and course project. Prerequisites: programming ability at the level of CS 106A and familiarity with biology and statistics."}}, {"pk": 2543, "model": "csyllabusapi.courseprogram", "fields": {"course": 812, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2543, "model": "csyllabusapi.courseuniversity", "fields": {"course": 812, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 812, "model": "csyllabusapi.course", "fields": {"name": "Symbolic Musical Information (MUSIC 253)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Focus on symbolic data for music applications including advanced notation systems, optical music recognition, musical data conversion, and internal structure of MIDI files."}}, {"pk": 2544, "model": "csyllabusapi.courseprogram", "fields": {"course": 813, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2544, "model": "csyllabusapi.courseuniversity", "fields": {"course": 813, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 813, "model": "csyllabusapi.course", "fields": {"name": "Music Query, Analysis, and Style Simulation (MUSIC 254)", "ects": 4, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Leveraging off three synchronized sets of symbolic data resources for notation and analysis, the lab portion introduces students to the open-source Humdrum Toolkit for music representation and analysis.  Issues of data content and quality as well as methods of information retrieval, visualization, and summarization are considered in class. Grading based primarily on student projects. Prerequisite: 253 or consent of instructor."}}, {"pk": 2545, "model": "csyllabusapi.courseprogram", "fields": {"course": 814, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2545, "model": "csyllabusapi.courseuniversity", "fields": {"course": 814, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 814, "model": "csyllabusapi.course", "fields": {"name": "Computational Biology: Structure and Organization of Biomolecules and Cells (BIOE 279, BIOMEDIN 279, BIOPHYS 279, CME 279)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules and cells.  These computational methods play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course topics include protein structure prediction, protein design, drug screening, molecular simulation, cellular-level simulation, image analysis for microscopy, and methods for solving structures from crystallography and electron microscopy data.  Prerequisites: elementary programming background (CS 106A or equivalent) and an introductory course in biology or biochemistry."}}, {"pk": 2546, "model": "csyllabusapi.courseprogram", "fields": {"course": 815, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2546, "model": "csyllabusapi.courseuniversity", "fields": {"course": 815, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 815, "model": "csyllabusapi.course", "fields": {"name": "Research Project in Software Systems and Security", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Topics vary. Focus is on emerging research themes such as programmable open mobile Internet that spans multiple system topics such as human-computer interaction, programming systems, operating systems, networking, and security. May be repeated for credit. Prerequisites: CS 103 and 107."}}, {"pk": 2547, "model": "csyllabusapi.courseprogram", "fields": {"course": 816, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2547, "model": "csyllabusapi.courseuniversity", "fields": {"course": 816, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 816, "model": "csyllabusapi.course", "fields": {"name": "Writing Intensive Research Project in Computer Science", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Restricted to Computer Science and Computer Systems Engineering undergraduates. Students enroll in the CS 294W section attached to the CS 294 project they have chosen."}}, {"pk": 2548, "model": "csyllabusapi.courseprogram", "fields": {"course": 817, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2548, "model": "csyllabusapi.courseuniversity", "fields": {"course": 817, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 817, "model": "csyllabusapi.course", "fields": {"name": "Software Engineering", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Software specification, testing and verification. The emphasis is on automated tools for developing reliable software. The course covers material---drawn primarily from recent research papers---on the technologynunderlying these tools. Assignments supplement the lectures with hands-on experience in using these tools and customizing them for solving new problems.  The course is appropriate for students intending to pursue research in program analysis and verification, as well as for those who wish to add the use of advanced software tools to their skill set. Prerequisites: 108. Recommended: a project course such as 140, 143 or 145."}}, {"pk": 2549, "model": "csyllabusapi.courseprogram", "fields": {"course": 818, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2549, "model": "csyllabusapi.courseuniversity", "fields": {"course": 818, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 818, "model": "csyllabusapi.course", "fields": {"name": "Departmental Lecture Series", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Priority given to first-year Computer Science Ph.D. students. CS Masters students admitted if space is available.  Presentations by members of the department faculty, each describing informally his or her current research interests and views of computer science as a whole."}}, {"pk": 2550, "model": "csyllabusapi.courseprogram", "fields": {"course": 819, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2550, "model": "csyllabusapi.courseuniversity", "fields": {"course": 819, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 819, "model": "csyllabusapi.course", "fields": {"name": "Cloud Computing Seminar", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For science, engineering, computer science, business, education, medicine, and law students. Cloud computing is bringing information systems out of the back office and making it core to the entire economy. Furthermore with the advent of smarter machines cloud computing will be integral to building a more precision planet. This class is intended for all students who want to begin to understand the implications of this technology. Guest industry experts are public company CEOs who are either delivering cloud services or using cloud services to transform their businesses."}}, {"pk": 2551, "model": "csyllabusapi.courseprogram", "fields": {"course": 820, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2551, "model": "csyllabusapi.courseuniversity", "fields": {"course": 820, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 820, "model": "csyllabusapi.course", "fields": {"name": "Parallel Computing Research Project", "ects": 1, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor."}}, {"pk": 2552, "model": "csyllabusapi.courseprogram", "fields": {"course": 821, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2552, "model": "csyllabusapi.courseuniversity", "fields": {"course": 821, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 821, "model": "csyllabusapi.course", "fields": {"name": "Advanced Multi-Core Systems", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149."}}, {"pk": 2553, "model": "csyllabusapi.courseprogram", "fields": {"course": 822, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2553, "model": "csyllabusapi.courseuniversity", "fields": {"course": 822, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 822, "model": "csyllabusapi.course", "fields": {"name": "Data for Sustainable Development (EARTHSYS 162, EARTHSYS 262)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "The sustainable development goals (SDGs) encompass many important aspects of human and ecosystem well-being that are traditionally difficult to measure. This project-based course will focus on ways to use inexpensive, unconventional data streams to measure outcomes relevant to SDGs, including poverty, hunger, health, governance, and economic activity. Students will apply machine learning techniques to various projects outlined at the beginning of the quarter. The main learning goals are to gain experience conducting and communicating original research. Prior knowledge of machine learning techniques, such as from CS 221, CS 229, CS 231N, STATS 202, or STATS 216 is required. Open to both undergraduate and graduate students. Enrollment limited to 24. Students must apply for the class by filling out the form at https://goo.gl/forms/9LSZF7lPkHadix5D3. A permission code will be given to admitted students to register for the class."}}, {"pk": 2554, "model": "csyllabusapi.courseprogram", "fields": {"course": 823, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2554, "model": "csyllabusapi.courseuniversity", "fields": {"course": 823, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 823, "model": "csyllabusapi.course", "fields": {"name": "Topics in Advanced Robotic Manipulation", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course provides a survey of the most important and influential concepts in autonomous robotic manipulation. It includes classical concepts that are still widely used and recent approaches that have changed the way we look autonomous manipulation. We cover approaches towards motion planning and control using visual and tactile perception as well as machine learning. This course is especially concerned with new approaches for overcoming challenges in generalization from experience, exploration of the environment, and learning representation so that these methods can scale to real problems. Students are expected to present one paper in a tutorial, debate a paper once from the Pro and once from the Con side. They are also expected to propose an original research project and work on it towards a research paper. Recommended: CS 131, 223A, 229 or equivalents."}}, {"pk": 2555, "model": "csyllabusapi.courseprogram", "fields": {"course": 824, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2555, "model": "csyllabusapi.courseuniversity", "fields": {"course": 824, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 824, "model": "csyllabusapi.course", "fields": {"name": "Representation Learning in Computer Vision", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "A representation performs the task of converting an observation in the real world (e.g. an image, a recorded speech signal, a word in a sentence) into a mathematical form (e.g. a vector). This mathematical form is then used by subsequent steps (e.g. a classifier) to produce the outcome, such as classifying an image or recognizing a spoken word. Forming the proper representation for a task is an essential problem in modern AI. In this course, we focus on 1) establishing why representations matter, 2) classical and moderns methods of forming representations in Computer Vision, 3) methods of analyzing and probing representations, 4) portraying the future landscape of representations with generic and comprehensive AI/vision systems over the horizon, and finally 5) going beyond computer vision by talking about non-visual representations, such as the ones used in NLP or neuroscience. The course will heavily feature systems based on deep learning and convolutional neural networks. We will have several teaching lectures, a number of prominent external guest speakers, as well as presentations by the students on recent papers and their projects. nnRequired Prerequisites: CS131A, CS231A, CS231B, or CS231N. If you do not have the required prerequisites, please contact a member of the course staff before enrolling in this course."}}, {"pk": 2556, "model": "csyllabusapi.courseprogram", "fields": {"course": 825, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2556, "model": "csyllabusapi.courseuniversity", "fields": {"course": 825, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 825, "model": "csyllabusapi.course", "fields": {"name": "Advanced Survey of Reinforcement Learning", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This class will provide a core overview of essential topics and newnresearch frontiers in reinforcement learning. Planned topics include:nmodel free and model based reinforcement learning, policy search, MontenCarlo Tree Search planning methods, off policy evaluation, exploration,nimitation learning, temporal abstraction/hierarchical approaches, safetynand risk sensitivity, human-in-the-loop RL, inverse reinforcementnlearning, learning to communicate, and insights from human learning.nStudents are expected to create an original research paper on a relatedntopic. Prerequisites: CS221 or AA238/CS238 or CS234 or CS229 or similarnexperience."}}, {"pk": 2557, "model": "csyllabusapi.courseprogram", "fields": {"course": 826, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2557, "model": "csyllabusapi.courseuniversity", "fields": {"course": 826, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 826, "model": "csyllabusapi.course", "fields": {"name": "Safe and Interactive Robotics", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Once confined to the manufacturing floor, robots are quickly entering the public space at multiple levels: drones, surgical robots, service robots, and self-driving cars are becoming tangible technologies impacting the human experience. Our goal in this class is to learn about and design algorithms that enable robots to reason about their actions, interact with one another, the humans, and the environment they live in, as well as plan safe strategies that humans can trust and rely on.nThis is a project-based graduate course that studies algorithms in formal methods, control theory, and robotics, which can improve the state-of-the-art human-robot systems. We focus on designing new algorithms for enhancing safe and interactive autonomy. nnRecommended: Introductory course in AI and robotics."}}, {"pk": 2558, "model": "csyllabusapi.courseprogram", "fields": {"course": 827, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2558, "model": "csyllabusapi.courseuniversity", "fields": {"course": 827, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 827, "model": "csyllabusapi.course", "fields": {"name": "Convex Optimization I (CME 364A, EE 364A)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability."}}, {"pk": 2559, "model": "csyllabusapi.courseprogram", "fields": {"course": 828, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2559, "model": "csyllabusapi.courseuniversity", "fields": {"course": 828, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 828, "model": "csyllabusapi.course", "fields": {"name": "Project in Mining Massive Data Sets", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Team project in data mining and machine learning of very large-scale data, including the problem statement, implementation, and evaluation of a solution. Students work on real problems on real-world data. The course provides access to large real-world data and access to big data cloud computing infrastructure (Amazon EC2, Google Cloud Platform). Some lectures on relevant materials will be given (Hadoop, Spark, Hive, Amazon EC2) as well as other topics of relevance to projects."}}, {"pk": 2560, "model": "csyllabusapi.courseprogram", "fields": {"course": 829, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2560, "model": "csyllabusapi.courseuniversity", "fields": {"course": 829, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 829, "model": "csyllabusapi.course", "fields": {"name": "Topics in Computer Networks", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit."}}, {"pk": 2561, "model": "csyllabusapi.courseprogram", "fields": {"course": 830, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2561, "model": "csyllabusapi.courseuniversity", "fields": {"course": 830, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 830, "model": "csyllabusapi.course", "fields": {"name": "Computer Graphics: Image Synthesis Techniques", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing."}}, {"pk": 2562, "model": "csyllabusapi.courseprogram", "fields": {"course": 831, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2562, "model": "csyllabusapi.courseuniversity", "fields": {"course": 831, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 831, "model": "csyllabusapi.course", "fields": {"name": "Computer Graphics: Animation and Simulation", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Core mathematics and methods for computer animation and motion simulation. Traditional animation techniques. Physics-based simulation methods for modeling shape and motion: particle systems, constraints, rigid bodies, deformable models, collisions and contact, fluids, and fracture. Animating natural phenomena. Methods for animating virtual characters and crowds. Additional topics selected from data-driven animation methods, realism and perception, animation systems, motion control, real-time and interactive methods, and multi-sensory feedback. Recommended: CS 148 and/or 205A. Prerequisite: linear algebra."}}, {"pk": 2563, "model": "csyllabusapi.courseprogram", "fields": {"course": 832, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2563, "model": "csyllabusapi.courseuniversity", "fields": {"course": 832, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 832, "model": "csyllabusapi.course", "fields": {"name": "Visual Computing Systems", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Visual computing tasks such as computational photography, image/video analysis, 3D reconstruction, and real-time 3D graphics are key responsibilities of modern computer systems ranging from sensor-rich smart phones, autonomous robots, and large data centers. These workloads demand exceptional system efficiency and this course examines the key ideas, techniques, and challenges associated with the design of parallel (and heterogeneous) systems that execute and accelerate visual computing applications. This course is intended for graduate and advanced undergraduate-level systems students interested in architecting efficient graphics, image processing, and computer vision platforms (both new hardware architectures and domain-optimized programming frameworks) and for students in graphics, vision, and ML that seek to understand throughput computing principles so they can develop scalablenalgorithms that map efficiently these future platforms. Students will perform daily research paper readings, complete simple programming assignments, and compete a self-selected term project. Prerequisites: CS 107 or equivalent. Recommended: Parallel computing or computer architecture (CS 149, EE 282), some background in techniques in either deep learning (CS 230, CS 231N), computer vision (CS 231A), digital image processing (CS 232)."}}, {"pk": 2564, "model": "csyllabusapi.courseprogram", "fields": {"course": 833, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2564, "model": "csyllabusapi.courseuniversity", "fields": {"course": 833, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 833, "model": "csyllabusapi.course", "fields": {"name": "Cloud Computing Technology", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "The largest change in the computer industry over the past five years has arguably been the emergence of cloud computing: organizations are increasingly moving their workloads to managed public clouds and using new, global-scale services that were simply not possible in private datacenters. However, both building and using cloud systems remains a black art with many difficult research challenges. This research seminar will cover industry and academic work on cloud computing and survey challenges including programming interfaces, cloud native applications, resource management, pricing, availability and reliability, privacy and security. Students will also propose and develop an original research project.n nPrerequisites: For graduate students, background in computer systems (CS 240, 244, 244B or 245) is strongly recommended. Undergrads will need instructor's approval."}}, {"pk": 2565, "model": "csyllabusapi.courseprogram", "fields": {"course": 834, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2565, "model": "csyllabusapi.courseuniversity", "fields": {"course": 834, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 834, "model": "csyllabusapi.course", "fields": {"name": "Advanced Topics in Cryptography", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Topics: Pseudo randomness, multiparty computation, pairing-based and lattice-based cryptography, zero knowledge protocols, and new encryption and integrity paradigms. May be repeated for credit. Prerequisite: 255."}}, {"pk": 2566, "model": "csyllabusapi.courseprogram", "fields": {"course": 835, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2566, "model": "csyllabusapi.courseuniversity", "fields": {"course": 835, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 835, "model": "csyllabusapi.course", "fields": {"name": "Engineering Design Optimization (AA 222)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Design of engineering systems within a formal optimization framework. This course covers the mathematical and algorithmic fundamentals of optimization, including derivative and derivative-free approaches for both linear and non-linear problems, with an emphasis on multidisciplinary design optimization. Topics will also include quantitative methodologies for addressing various challenges, such as accommodating multiple objectives, automating differentiation, handling uncertainty in evaluations, selecting design points for experimentation, and principled methods for optimization when evaluations are expensive. Applications range from the design of aircraft to automated vehicles. Prerequisites: some familiarity with probability, programming, and multivariable calculus."}}, {"pk": 2567, "model": "csyllabusapi.courseprogram", "fields": {"course": 836, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2567, "model": "csyllabusapi.courseuniversity", "fields": {"course": 836, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 836, "model": "csyllabusapi.course", "fields": {"name": "Algorithmic Techniques for Big Data", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Designing algorithms for efficient processing of large data sets poses unique challenges. This course will discuss algorithmic paradigms that have been developed to efficiently process data sets that are much larger than available memory. We will cover streaming algorithms and sketching methods that produce compact datanstructures, dimension reduction methods that preserve geometric structure, efficient algorithms for numerical linear algebra, graph sparsification methods, as well as impossibility results for these techniques."}}, {"pk": 2568, "model": "csyllabusapi.courseprogram", "fields": {"course": 837, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2568, "model": "csyllabusapi.courseuniversity", "fields": {"course": 837, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 837, "model": "csyllabusapi.course", "fields": {"name": "Computational Biology in Four Dimensions (BIOMEDIN 371, BIOPHYS 371, CME 371)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Cutting-edge research on computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules, cells, and everything in between.  These techniques, which draw on approaches ranging from physics-based simulation to machine learning, play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course is devoted primarily to reading, presentation, discussion, and critique of papers describing important recent research developments.  Prerequisite: CS 106A or equivalent, and an introductory course in biology or biochemistry. Recommended: some experience in mathematical modeling (does not need to be a formal course)."}}, {"pk": 2569, "model": "csyllabusapi.courseprogram", "fields": {"course": 838, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2569, "model": "csyllabusapi.courseuniversity", "fields": {"course": 838, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 838, "model": "csyllabusapi.course", "fields": {"name": "Large-Scale Neural Network Modeling for Neuroscience (PSYCH 249)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Introduction to designing, building, and training neural networks for modeling brain and behavioral data, including: deep convolutional neural network models of sensory systems (vision, audition, somatosensation); recurrent neural networks for dynamics, memory and attention; integration of variational and generative methods for cognitive modeling; and methods and metrics for comparing such models to real-world neural data.  Attention will be given both to established methods as well as cutting-edge techniques.  Students will learn conceptual bases for deep neural network models, and will also implement learn to implement and train large-scale models in Tensorflow using GPUs.  Requirements:  Fluency in Unix shell and Python programming, familiarity with differential equations, linear algebra, and probability theory, and one or more courses in cognitive or systems neuroscience."}}, {"pk": 2570, "model": "csyllabusapi.courseprogram", "fields": {"course": 839, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2570, "model": "csyllabusapi.courseuniversity", "fields": {"course": 839, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 839, "model": "csyllabusapi.course", "fields": {"name": "Human-Computer Interaction Research", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Prepares students to conduct original HCI research by reading and discussing seminal and cutting-edge research papers. Main topics are ubiquitous computing, social computing, and design and creation; breadth topics include HCI methods, programming, visualization, and user modeling. Student pairs perform a quarter-long research project. Prerequisites: For CS and Symbolic Systems undergraduates/masters students, an A- or better in CS 147 or CS 247. No prerequisite for PhD students or students outside of CS and Symbolic Systems."}}, {"pk": 2571, "model": "csyllabusapi.courseprogram", "fields": {"course": 840, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2571, "model": "csyllabusapi.courseuniversity", "fields": {"course": 840, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 840, "model": "csyllabusapi.course", "fields": {"name": "Designing Solutions to Global Grand Challenges", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "In this course we creatively apply information technologies to collectively attack Global Grand Challenges (e.g., global warming, rising healthcare costs and declining access, and ensuring quality education for all). Interdisciplinary student teams will carry out need-finding within a target domain, followed by brainstorming to propose a quarter long project. Teams will spend the rest of the quarter applying user-centered design methods to rapidly iterate through design, prototyping, and testing of their solutions. This course will interweave a weekly lecture with a weekly studio session where students apply the techniques hands-on in a small-scale, supportive environment."}}, {"pk": 2572, "model": "csyllabusapi.courseprogram", "fields": {"course": 841, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2572, "model": "csyllabusapi.courseuniversity", "fields": {"course": 841, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 841, "model": "csyllabusapi.course", "fields": {"name": "Understanding Users", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This project-based class focuses on understanding the use of technology in the world. Students will learn generative and evaluative research methods to explore how systems are appropriated into everyday life in a quarter-long project where they design, implement and evaluate a novel mobile application. Quantitative (e.g. A/B testing, instrumentation, analytics, surveys) and qualitative (e.g. diary studies, contextual inquiry, ethnography) methods and their combination will be covered along with practical experience applying these methods in their project. Prerequisites: CS 147, 193A/193P (or equivalent mobile programming experience)."}}, {"pk": 2573, "model": "csyllabusapi.courseprogram", "fields": {"course": 842, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2573, "model": "csyllabusapi.courseuniversity", "fields": {"course": 842, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 842, "model": "csyllabusapi.course", "fields": {"name": "Computational Models of the Neocortex", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course emphasizes approaches to scaling the technologies of computer science and systems neuroscience to take advantage of the exponential trend in computational power known as Moore's Law. Modern methods in signal processing and machine learning are combined with technologies for managing large datasets common in industry. Classes feature scientists presenting novel approaches for analyzing the structure and function of complex neural circuits. Grading is based on class participation (30%), a project proposal due at midterm (20%), and a final project demonstration and report due by the end of finals (50%). Team projects are encouraged, especially multi-disciplinary collaborations. Prerequisites are basic high-school biology, good math skills and familiarity with machine learning. Some background in computer vision and signal processing is important for projects in structural analysis. Familiarity with modern artificial neural network technologies is a plus for projects in functional analysis. For more detail, see http://www.stanford.edu/class/cs379c/ with special attention to the CALENDAR and DISCUSSION tabs from past classes available by following the ARCHIVES link."}}, {"pk": 2574, "model": "csyllabusapi.courseprogram", "fields": {"course": 843, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2574, "model": "csyllabusapi.courseuniversity", "fields": {"course": 843, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 843, "model": "csyllabusapi.course", "fields": {"name": "Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once."}}, {"pk": 2575, "model": "csyllabusapi.courseprogram", "fields": {"course": 844, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2575, "model": "csyllabusapi.courseuniversity", "fields": {"course": 844, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 844, "model": "csyllabusapi.course", "fields": {"name": "Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390A,B,C may each be taken once."}}, {"pk": 2576, "model": "csyllabusapi.courseprogram", "fields": {"course": 845, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2576, "model": "csyllabusapi.courseuniversity", "fields": {"course": 845, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 845, "model": "csyllabusapi.course", "fields": {"name": "Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390A,B,C may each be taken once."}}, {"pk": 2577, "model": "csyllabusapi.courseprogram", "fields": {"course": 846, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2577, "model": "csyllabusapi.courseuniversity", "fields": {"course": 846, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 846, "model": "csyllabusapi.course", "fields": {"name": "Part-time Curricular Practical Training", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educationalnopportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research reportnoutlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make themnineligible for Optional Practical Training (OPT)."}}, {"pk": 2578, "model": "csyllabusapi.courseprogram", "fields": {"course": 847, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2578, "model": "csyllabusapi.courseuniversity", "fields": {"course": 847, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 847, "model": "csyllabusapi.course", "fields": {"name": "Part-time Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2579, "model": "csyllabusapi.courseprogram", "fields": {"course": 848, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2579, "model": "csyllabusapi.courseuniversity", "fields": {"course": 848, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 848, "model": "csyllabusapi.course", "fields": {"name": "Part-Time Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2580, "model": "csyllabusapi.courseprogram", "fields": {"course": 849, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2580, "model": "csyllabusapi.courseuniversity", "fields": {"course": 849, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 849, "model": "csyllabusapi.course", "fields": {"name": "Part-Time Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2581, "model": "csyllabusapi.courseprogram", "fields": {"course": 850, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2581, "model": "csyllabusapi.courseuniversity", "fields": {"course": 850, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 850, "model": "csyllabusapi.course", "fields": {"name": "Part-Time CPT", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2582, "model": "csyllabusapi.courseprogram", "fields": {"course": 851, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2582, "model": "csyllabusapi.courseuniversity", "fields": {"course": 851, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 851, "model": "csyllabusapi.course", "fields": {"name": "Part-Time CPT", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2583, "model": "csyllabusapi.courseprogram", "fields": {"course": 852, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2583, "model": "csyllabusapi.courseuniversity", "fields": {"course": 852, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 852, "model": "csyllabusapi.course", "fields": {"name": "Part-Time Curricular Practical Training", "ects": 4, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2584, "model": "csyllabusapi.courseprogram", "fields": {"course": 853, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2584, "model": "csyllabusapi.courseuniversity", "fields": {"course": 853, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 853, "model": "csyllabusapi.course", "fields": {"name": "Part-time Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2585, "model": "csyllabusapi.courseprogram", "fields": {"course": 854, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2585, "model": "csyllabusapi.courseuniversity", "fields": {"course": 854, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 854, "model": "csyllabusapi.course", "fields": {"name": "Part-time Curricular Practical Training", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT)."}}, {"pk": 2586, "model": "csyllabusapi.courseprogram", "fields": {"course": 855, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2586, "model": "csyllabusapi.courseuniversity", "fields": {"course": 855, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 855, "model": "csyllabusapi.course", "fields": {"name": "Computer Laboratory", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For CS graduate students. A substantial computer program is designed and implemented; written report required. Recommended as a preparation for dissertation research. Register using the section number associated with the instructor. Prerequisite: consent of instructor."}}, {"pk": 2587, "model": "csyllabusapi.courseprogram", "fields": {"course": 856, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2587, "model": "csyllabusapi.courseuniversity", "fields": {"course": 856, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 856, "model": "csyllabusapi.course", "fields": {"name": "Independent Database Project", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "For graduate students in Computer Science. Use of database management or file systems for a substantial application or implementation of components of database management system. Written analysis and evaluation required. Register using the section number associated with the instructor. Prerequisite: consent of instructor."}}, {"pk": 2588, "model": "csyllabusapi.courseprogram", "fields": {"course": 857, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2588, "model": "csyllabusapi.courseuniversity", "fields": {"course": 857, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 857, "model": "csyllabusapi.course", "fields": {"name": "Independent Project", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Letter grade only."}}, {"pk": 2589, "model": "csyllabusapi.courseprogram", "fields": {"course": 858, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2589, "model": "csyllabusapi.courseuniversity", "fields": {"course": 858, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 858, "model": "csyllabusapi.course", "fields": {"name": "Independent Project", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Graded satisfactory/no credit."}}, {"pk": 2590, "model": "csyllabusapi.courseprogram", "fields": {"course": 859, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2590, "model": "csyllabusapi.courseuniversity", "fields": {"course": 859, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 859, "model": "csyllabusapi.course", "fields": {"name": "Beyond Bits and Atoms: Designing Technological Tools (EDUC 236)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Practicum in designing and building technology-enabled curricula and hands-on learning environments. Students use software toolkits and state-of-the-art fabrication machines to design educational software, educational toolkits, and tangible user interfaces. The course will focus on designing low-cost technologies, particularly for urban school in the US and abroad. We will explore theoretical and design frameworks from the constructionist learning perspective, critical pedagogy, interaction design for children."}}, {"pk": 2591, "model": "csyllabusapi.courseprogram", "fields": {"course": 860, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2591, "model": "csyllabusapi.courseuniversity", "fields": {"course": 860, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 860, "model": "csyllabusapi.course", "fields": {"name": "Beyond Bits and Atoms - Lab (EDUC 211)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course is a hands-on lab in the prototyping and fabrication of tangible technologies, with a special focus in learning and education. We will learn how to use state-of-the-art fabrication machines (3D printers, 3D scanners, laser cutters, routers) to design educational toolkits, educational toys, science kits, and tangible user interfaces. A special focus of the course will be to design low-cost technologies, particularly for urban school in the US and abroad."}}, {"pk": 2592, "model": "csyllabusapi.courseprogram", "fields": {"course": 861, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2592, "model": "csyllabusapi.courseuniversity", "fields": {"course": 861, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 861, "model": "csyllabusapi.course", "fields": {"name": "Computation and cognition: the probabilistic approach (PSYCH 204)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will introduce the probabilistic approach to cognitive science, in which learning and reasoning are understood as inference in complex probabilistic models. Examples will be drawn from areas including concept learning, causal reasoning, social cognition, and language understanding. Formal modeling ideas and techniques will be discussed in concert with relevant empirical phenomena."}}, {"pk": 2593, "model": "csyllabusapi.courseprogram", "fields": {"course": 862, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2593, "model": "csyllabusapi.courseuniversity", "fields": {"course": 862, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 862, "model": "csyllabusapi.course", "fields": {"name": "Data Visualization", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Techniques and algorithms for creating effective visualizations based on principles from graphic design, visual art, perceptual psychology, and cognitive science.  Topics: graphical perception, data and image models, visual encoding, graph and tree layout, color, animation, interaction techniques, automated design.  Lectures, reading, and project.  Prerequisite: one of 147, 148, or equivalent."}}, {"pk": 2594, "model": "csyllabusapi.courseprogram", "fields": {"course": 863, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2594, "model": "csyllabusapi.courseuniversity", "fields": {"course": 863, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 863, "model": "csyllabusapi.course", "fields": {"name": "Topics in Computer Graphics: Agile Hardware Design", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Topic changes each quarter. Recent topics: computational photography, data visualization, character animation, virtual worlds, graphics architectures, advanced rendering.  See http://graphics.stanford.edu/courses for offerings and prerequisites. May be repeated for credit."}}, {"pk": 2595, "model": "csyllabusapi.courseprogram", "fields": {"course": 864, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2595, "model": "csyllabusapi.courseuniversity", "fields": {"course": 864, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 864, "model": "csyllabusapi.course", "fields": {"name": "Computational Imaging and Display (EE 367)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Spawned by rapid advances in optical fabrication and digital processing power, a new generation of imaging technology is emerging: computational cameras at the convergence of applied mathematics, optics, and high-performance computing. Similar trends are observed for modern displays pushing the boundaries of resolution, contrast, 3D capabilities, and immersive experiences through the co-design of optics, electronics, and computation. This course serves as an introduction to the emerging field of computational imaging and displays. Students will learn to master bits and photons."}}, {"pk": 2596, "model": "csyllabusapi.courseprogram", "fields": {"course": 865, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2596, "model": "csyllabusapi.courseuniversity", "fields": {"course": 865, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 865, "model": "csyllabusapi.course", "fields": {"name": "Music, Computing, Design I: Art of Design for Computer Music (MUSIC 256A)", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Creative design for computer music software. Programming, audiovisual design, as well as software design for musical tools, instruments, toys, and games. Provides paradigms and strategies for designing and building music software, with emphases on interactive systems, aesthetics, and artful product design. Course work includes several programming assignments and a \"design+implement\" final project. Prerequisite: experience in C/C++ and/or Java.See https://ccrma.stanford.edu/courses/256a/"}}, {"pk": 2597, "model": "csyllabusapi.courseprogram", "fields": {"course": 866, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2597, "model": "csyllabusapi.courseuniversity", "fields": {"course": 866, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 866, "model": "csyllabusapi.course", "fields": {"name": "Advanced Reading and Research", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Letter grade only. Advanced reading and research for CS graduate students. Register using the section number associated with the instructor. Prerequisite: consent of instructor."}}, {"pk": 2598, "model": "csyllabusapi.courseprogram", "fields": {"course": 867, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2598, "model": "csyllabusapi.courseuniversity", "fields": {"course": 867, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 867, "model": "csyllabusapi.course", "fields": {"name": "Advanced Reading and Research", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Graded satisfactory/no credit. Advanced reading and research for CS graduate students. Register using the section number associated with the instructor. Prerequisite: consent of instructor."}}, {"pk": 2599, "model": "csyllabusapi.courseprogram", "fields": {"course": 868, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2599, "model": "csyllabusapi.courseuniversity", "fields": {"course": 868, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 868, "model": "csyllabusapi.course", "fields": {"name": "Seminar in Artificial Intelligence in Healthcare", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Artificial intelligence is poised to make radical changes in healthcare, transforming areas such as diagnosis, genomics, surgical robotics, and drug discovery. In the coming years, artificial intelligence has the potential to lower healthcare costs, identify more effective treatments, and facilitate prevention and early detection of diseases. This class is a seminar series featuring prominent researchers, physicians, entrepreneurs, and venture capitalists, all sharing their thoughts on the future of healthcare. We highly encourage students of all backgrounds to enroll (no AI/healthcare background necessary). Speakers and more at shift.stanford.edu/healthai."}}, {"pk": 2600, "model": "csyllabusapi.courseprogram", "fields": {"course": 869, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2600, "model": "csyllabusapi.courseuniversity", "fields": {"course": 869, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 869, "model": "csyllabusapi.course", "fields": {"name": "Interactive Media and Games", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Interactive media and games increasingly pervade and shape our society. In addition to their dominant roles in entertainment, video games play growing roles in education, arts, and science. This seminar series brings together a diverse set of experts to provide interdisciplinary perspectives on these media regarding their history, technologies, scholarly research, industry, artistic value, and potential future."}}, {"pk": 2601, "model": "csyllabusapi.courseprogram", "fields": {"course": 870, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2601, "model": "csyllabusapi.courseuniversity", "fields": {"course": 870, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 870, "model": "csyllabusapi.course", "fields": {"name": "Human-Computer Interaction Seminar", "ects": null, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "Weekly speakers on human-computer interaction topics. May be repeated for credit."}}, {"pk": 2602, "model": "csyllabusapi.courseprogram", "fields": {"course": 871, "program": 37, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 2602, "model": "csyllabusapi.courseuniversity", "fields": {"course": 871, "university": 7, "created": "2017-10-30T15:07:40.122Z"}}, {"pk": 871, "model": "csyllabusapi.course", "fields": {"name": "Media Innovation", "ects": 5, "created": "2017-10-30T15:07:40.122Z", "modified": "2017-10-30T15:07:41.673Z", "semester": null, "description": "This course will introduce students interested in computer science, engineering, and media to what\u00c2\u00bfs possible and probable when it comes to media innovation. nnSpeakers from multiple disciplines and industry will discuss a range of topics in the context of evolving media with a focus on the technical trends, opportunities and challenges surfacing in the unfolding media ecosystem. Speakers will underscore the need to innovate to survive in the media and information industries. Open to both undergraduates and graduate students."}}]